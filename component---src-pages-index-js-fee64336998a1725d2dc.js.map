{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/MosaComponents/MosaVideoPlayer.js"],"names":["IndexPage","Consumer","isSerialAvailable","connected","commandRobot","target","inputMethod","handleInputMethodChange","outputMethod","handleOutputMethodChange","settings","updateSettings","title","container","spacing","justify","item","xs","md","lg","value","exclusive","onChange","disabled","variant","Canvas","props","funscripts","axis","totalTime","vpos","rest","canvasRef","useRef","useEffect","ctx","clearRect","canvas","width","height","fillStyle","beginPath","moveTo","entry","x","y","lineTo","stroke","draw","current","getContext","scroll_left","Math","max","floor","vis_width","document","getElementById","scrollLeft","stle","maxHeight","maxWidth","overflow","id","style","canvas_width","ref","MosaVideoPlayer","useState","current_file","setCurrentFile","video_files","setVideoFiles","running","setRunning","moving_pauses","setMovingPauses","moving_pause_start","setMovingPauseStart","video_length","setVideoLength","video_position","setVideoPosition","video_speed","setVideoSpeed","latency","setLatency","position","setPosition","setFunscripts","script_offsets","setScriptOffsets","editing_axis","setEditingAxis","axes","useInterval","player","paused","current_msecs","currentTime","tmp_position","tmp_offsets","map","undefined","inverted","actions","prev_offset","next_offset","length","prev_action","next_action","prev_val","clampedNum","next_val","where_in_interval","mid_val","abs","recover_degree","clampedFloat","console","log","e","keydownListener","keydownEvent","key","repeat","pos","tmp","push","sort","a","b","filter","window","addEventListener","removeEventListener","fetch","then","res","text","result","split","error","alert","controls","file","src","file_base","replaceAll","fetches","headers","json","catch","err","warn","Promise","allSettled","tmp2","video","play","ondurationchange","srcElement","duration","ontimeupdate","setFile","f","speed","playbackRate","parseFloat","setEditAxis","onClick","element","createElement","setAttribute","encodeURIComponent","JSON","stringify","extension","display","body","appendChild","click","removeChild","downloadEditingScript","color","min","step","track","valueLabelDisplay","marks","label","control","checked","name","toggleRunning"],"mappings":"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","file":"component---src-pages-index-js-fee64336998a1725d2dc.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { Card, Typography, CardContent, Grid, Divider } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n\nimport { MosaContext } from '../context/MosaContext'\n\nimport MosaOutputRangeControl from '../components/MosaComponents/MosaOutputRangeControl'\nimport MosaMotionControl from '../components/MosaComponents/MosaMotionControl'\nimport MosaPlanarControl from '../components/MosaComponents/MosaPlanarControl'\nimport MosaVibeControl from '../components/MosaComponents/MosaVibeControl'\nimport MosaSineControl from '../components/MosaComponents/MosaSineControl'\nimport MosaVisualizer from '../components/MosaComponents/MosaVisualizer'\nimport MosaRandomControl from '../components/MosaComponents/MosaRandomControl'\nimport MosaVideoPlayer from '../components/MosaComponents/MosaVideoPlayer'\n\nconst IndexPage = () => {\n  return (\n    <MosaContext.Consumer>\n      {({\n        isSerialAvailable,\n        connected,\n        commandRobot,\n        target,\n        inputMethod,\n        handleInputMethodChange,\n        outputMethod,\n        handleOutputMethodChange,\n        settings,\n        updateSettings,\n      }) => (\n        <Layout>\n          <SEO title=\"Home\" />\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item xs={12} md={4} lg={3}>\n              <Card>\n                <CardContent>\n                  <Typography>\n                    Input: {!inputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={inputMethod}\n                    exclusive\n                    onChange={handleInputMethodChange}\n                  >\n                    <ToggleButton value=\"web\">WEB</ToggleButton>\n                    <ToggleButton value=\"remote\" disabled>\n                      REMOTE\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography>\n                    Output: {!outputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={outputMethod}\n                    exclusive\n                    onChange={handleOutputMethodChange}\n                  >\n                    {isSerialAvailable && (\n                      <ToggleButton value=\"serial\">SERIAL</ToggleButton>\n                    )}\n                    <ToggleButton value=\"visualizer\">SR-VIS</ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography variant=\"caption\">\n                    (more I/O coming soon)\n                  </Typography>\n                  {!isSerialAvailable && ( // if serial not available, explain\n                    <>\n                      <br />\n                      <Typography>\n                        Could not detect serial capabilities. Please use the\n                        latest version of Chrome, open{' '}\n                        <code>chrome://flags</code>, and set\n                        <code>\n                          #enable-experimental-web-platform-features\n                        </code>{' '}\n                        (note that these are experimental features, use at your\n                        own risk, etc etc)\n                      </Typography>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              <hr />\n              <MosaVisualizer target={target} />\n              <hr />\n              <MosaOutputRangeControl\n                settings={settings}\n                updateSettings={updateSettings}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={5}>\n              <MosaMotionControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaVibeControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={4}>\n              <MosaPlanarControl\n                connected={connected}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaRandomControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaVideoPlayer\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaSineControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n          </Grid>\n          &nbsp;\n          <Divider />\n        </Layout>\n      )}\n    </MosaContext.Consumer>\n  )\n}\n\nexport default IndexPage\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControlLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Switch,\n  Typography,\n} from '@material-ui/core'\n\nimport { useInterval } from '../../hooks/useIntervalHook'\nimport { clampedFloat, clampedNum } from '../../utils/clamp'\n\nconst Canvas = props => {\n  const { funscripts, axis, totalTime, vpos, ...rest } = props\n  const canvasRef = useRef(null)\n  const canvas_width = 20000\n  const vis_width = 800\n\n  const draw = ctx => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.fillStyle = '#000000'\n    ctx.beginPath()\n    ctx.moveTo(0,50)\n    for(let entry of funscripts[axis][\"actions\"]) {\n      let x = entry[\"at\"] / totalTime * canvas_width\n      let y = 100 - entry[\"pos\"]\n      ctx.lineTo(x, y)\n    }\n    ctx.stroke()\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    draw(context)\n  }, [funscripts, axis, totalTime])\n\n  useEffect(() => {\n    let scroll_left = Math.max(Math.floor(vpos / totalTime * canvas_width) - vis_width / 2, 0)\n    document.getElementById(\"fiudfzdifu\").scrollLeft = scroll_left\n  }, [vpos, totalTime])\n\n  let stle = {maxHeight: '120px', maxWidth: vis_width + 'px', overflow: 'scroll'}\n  return <div id=\"fiudfzdifu\" style={stle}>\n          <canvas width={canvas_width+\"px\"} height=\"100px\" ref={canvasRef} {...rest}/>\n         </div>\n}\n\nexport const MosaVideoPlayer = props => {\n  const { connected, target, commandRobot } = props\n\n  const [current_file, setCurrentFile] = useState(\"\")\n  const [video_files, setVideoFiles] = useState([])\n\n  const [running, setRunning] = useState(false)\n  const [moving_pauses, setMovingPauses] = useState(true)\n  const [moving_pause_start, setMovingPauseStart] = useState(0)\n\n  const [video_length, setVideoLength] = useState(0)\n  const [video_position, setVideoPosition] = useState(0)\n  const [video_speed, setVideoSpeed] = useState(\"100\")\n  const [latency, setLatency] = useState(0)\n  const [position, setPosition] = useState({})\n\n  const [funscripts, setFunscripts] = useState({})\n  const [script_offsets, setScriptOffsets] = useState({})\n\n  const [editing_axis, setEditingAxis] = useState(\"none\")\n\n  const axes = [[\"L0\", \".funscript\"],\n                [\"R2\", \".pitch.funscript\"],\n                [\"R1\", \".roll.funscript\"],\n                [\"R0\", \".twist.funscript\"],\n                [\"L1\", \".forward.funscript\"]];\n\n  useInterval(() => {\n    if (running) {\n      let player = document.getElementById(\"idvideo\");\n      if(player.paused) return;\n      let current_msecs = player.currentTime * 1000.0 - latency;\n      let tmp_position = {...position};\n      let tmp_offsets = {...script_offsets};\n      for(let axis of axes.map((entry) => entry[0])) {\n        try {\n          if(funscripts[axis] === undefined) continue;\n          if(funscripts[axis][\"actions\"] === undefined) continue;\n          let inverted = !!funscripts[axis][\"inverted\"];\n\n          let actions = funscripts[axis][\"actions\"];\n          let prev_offset = script_offsets[axis];\n          if(actions[prev_offset][\"at\"] > current_msecs) prev_offset = 0;\n          let next_offset = prev_offset + 1;\n          while(next_offset < actions.length && actions[next_offset][\"at\"] < current_msecs) next_offset++;\n          if(next_offset >= actions.length || next_offset < 1) continue;\n          prev_offset = next_offset - 1;\n          if(actions[prev_offset][\"at\"] > current_msecs) continue;\n\n          let prev_action = actions[prev_offset];\n          let next_action = actions[next_offset];\n          let prev_val = clampedNum(prev_action[\"pos\"], 0, 100) * 10.0;\n          let next_val = clampedNum(next_action[\"pos\"], 0, 100) * 10.0;\n          if(inverted) {\n            prev_val = 1000 - prev_val;\n            next_val = 1000 - next_val;\n          }\n          let where_in_interval = (current_msecs - prev_action[\"at\"])*1.0 / (next_action[\"at\"] - prev_action[\"at\"])*1.0;\n          let mid_val = (1.0 - where_in_interval) * prev_val + where_in_interval * next_val;\n\n          // if enabled, fill L0 pauses with slow motion\n          const pause_threshold = 2000\n          if(axis === \"L0\" && moving_pauses) {\n            if(mid_val > 850) {\n              if(moving_pause_start <= 0) {\n                // we are not in pause mode yet, keep watching\n                setMovingPauseStart(current_msecs)\n              } else {\n                if(current_msecs - moving_pause_start > pause_threshold) {\n                  // we are in a pause, create holding pattern\n                  mid_val = Math.abs(1000 - (((current_msecs - moving_pause_start - pause_threshold) / 4) % 2000)) * 0.8\n                }\n              }\n            } else {\n              // seems to be some action here, recover\n              if(moving_pause_start < 0) {\n                // we are recovering from a pause, advance to mid_val (finish in 600ms)\n                let recover_degree = clampedFloat((current_msecs - Math.abs(moving_pause_start)) / 600, 0, 1)\n                console.log(`recovering ${recover_degree}`)\n                mid_val = recover_degree * mid_val + (1 - recover_degree) * tmp_position[\"L0\"]\n                if(recover_degree > 0.95) setMovingPauseStart(0)\n              } else if(moving_pause_start > 0) {\n                // we might be in a pause\n                if(current_msecs - moving_pause_start > pause_threshold) {\n                  // we were in a pause, set to recover\n                  setMovingPauseStart(-current_msecs)\n                  mid_val = tmp_position[\"L0\"]\n                } else {\n                  // not paused yet, just reset timer\n                  setMovingPauseStart(0)\n                }\n              }\n            }\n          }\n\n          tmp_position[axis] = mid_val;\n          // if(axis === \"L0\") console.log(`${prev_offset} ${where_in_interval} ${mid_val} ${prev_val} ${next_val}`);\n          tmp_offsets[axis] = prev_offset;\n        } catch(e) {\n          console.log(e);\n        }\n      }\n      setPosition(tmp_position);\n      setScriptOffsets(tmp_offsets);\n      if(connected) commandRobot(tmp_position, 0);\n    }\n  }, 50) // next execution in 50ms\n\n  const setFile = file => {\n    let tmp = {};\n    document.getElementById(\"idvideo\").src = `video/${file}`;\n    let file_base = \"video/\" + file.replaceAll(\".mp4\", \"\");\n    let fetches = [];\n    for(let axis of axes) {\n      fetches.push(\n        fetch(file_base + axis[1], { headers : { 'Content-Type': 'application/json', 'Accept': 'application/json' } } ).then(\n          (res) => res.json().then(\n            (json) => tmp[axis[0]] = json\n          ).catch(\n            (err) => { console.log(err); tmp[axis[0]] = undefined; }\n          )\n        ).catch(\n            (err) => { console.warn(err); tmp[axis[0]] = undefined; }\n          )\n      )\n    }\n    Promise.allSettled(fetches).then(\n        () => {\n            setEditingAxis(\"none\")\n            setCurrentFile(file)\n            setFunscripts(tmp)\n            let tmp2 = {};\n            for(let axis in tmp) tmp2[axis] = 0\n            setScriptOffsets(tmp2)\n            tmp2 = {};\n            for(let axis in tmp) if(tmp[axis] !== undefined) tmp2[axis] = 500\n            setPosition({...tmp2})\n            let video = document.getElementById(\"idvideo\")\n            video.play();\n            video.ondurationchange = (e) => setVideoLength(e.srcElement.duration * 1000)\n            video.ontimeupdate = (e) => setVideoPosition(e.srcElement.currentTime * 1000)\n        }\n    );\n  }\n\n  const setEditAxis = axis => {\n    let tmp = {...funscripts}\n    if(tmp[axis] === undefined) {\n      tmp[axis] = {\"actions\": [{\"at\": 0, \"pos\": 50}]}\n      setFunscripts(tmp)\n      console.log(`created funscript file ${axis}`)\n      let tmp2 = {...script_offsets}\n      tmp2[axis] = 0\n      setScriptOffsets(tmp2)\n    }\n    setEditingAxis(axis)\n  }\n\n  const selectVideoSpeed = speed => {\n    let player = document.getElementById(\"idvideo\");\n    player.playbackRate = parseFloat(speed) / 100;\n    setVideoSpeed(speed)\n  }\n\n  const keydownListener = keydownEvent => {\n    const { key, target, repeat } = keydownEvent;\n    if (repeat) return;\n    if(key >= '1' && key <= '9') {\n      let pos = (key - '1') / 8 * 100\n      let tmp = {...funscripts}\n      let player = document.getElementById(\"idvideo\")\n      let current_msecs = player.currentTime * 1000.0 - latency\n      tmp[editing_axis][\"actions\"].push({\"at\": Math.floor(current_msecs), \"pos\": Math.floor(pos)})\n      tmp[editing_axis][\"actions\"].sort((a, b) => a[\"at\"] - b[\"at\"])\n      setFunscripts(tmp)\n      console.log(`Axis ${editing_axis} has ${tmp[editing_axis][\"actions\"].length} actions`)\n    }\n    if(key === '0') {\n      let tmp = {...funscripts}\n      let player = document.getElementById(\"idvideo\")\n      let current_msecs = player.currentTime * 1000 - latency\n      tmp[editing_axis][\"actions\"] = tmp[editing_axis][\"actions\"].filter( (e) => e[\"at\"] < current_msecs - 1000 || e[\"at\"] > current_msecs + 500)\n      setFunscripts(tmp)\n      player.currentTime = current_msecs / 1000 - 3\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keydownListener, true)\n    return () => window.removeEventListener(\"keydown\", keydownListener, true)\n  })\n\n  const toggleRunning = running => {\n    setRunning(!running)\n  }\n\n  const downloadEditingScript = () => {\n    let element = document.createElement('a');\n    element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(funscripts[editing_axis])));\n    let extension = \".json\"\n    for(let axis of axes) {\n      if(axis[0] === editing_axis) extension = axis[1]\n    }\n    element.setAttribute('download', current_file.replaceAll(\".mp4\", extension));\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  useEffect(() => {\n    if(video_files.length > 0) return;\n    fetch(\"video/videos.txt\", {})\n    .then(res => res.text())\n    .then(\n          (result) => { setVideoFiles(result.split(\"\\n\")) },\n          (error) => { alert(\"Could not load list of video files\"); }\n    )\n  })\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Video {Math.floor(position[\"L0\"])} {Math.floor(position[\"R2\"])} {Math.floor(position[\"R1\"])}</Typography>\n        <hr />\n        <video id=\"idvideo\" width=\"100%\" controls>\n        </video>\n        {editing_axis !== \"none\" ? <Canvas vpos={video_position} funscripts={funscripts} axis={editing_axis} totalTime={video_length}></Canvas> : \"\"}\n      </CardContent>\n      <Typography>File</Typography>\n      <Select\n        id=\"idselect\"\n        value={current_file}\n        onChange={(e, value) => setFile(value.props.value)}>\n        {video_files.map((f) => (\n          <MenuItem value={f} key={f} >{f}</MenuItem>\n        ))}\n      </Select>\n\n      <Select\n        value={video_speed}\n        onChange={(e, value) => selectVideoSpeed(value.props.value)}>\n        <MenuItem value=\"10\" key=\"10\">10%</MenuItem>\n        <MenuItem value=\"25\" key=\"25\">25%</MenuItem>\n        <MenuItem value=\"50\" key=\"50\">50%</MenuItem>\n        <MenuItem value=\"100\" key=\"100\">100%</MenuItem>\n      </Select>\n      <Select\n        value={editing_axis}\n        onChange={(e, value) => setEditAxis(value.props.value)}>\n        <MenuItem value=\"none\" key=\"none\">none</MenuItem>\n        <MenuItem value=\"L0\" key=\"main\">Main/L0</MenuItem>\n        <MenuItem value=\"R2\" key=\"pitch\">Pitch/R2</MenuItem>\n        <MenuItem value=\"R1\" key=\"roll\">Roll/R1</MenuItem>\n        <MenuItem value=\"R0\" key=\"twist\">Twist/R0</MenuItem>\n        <MenuItem value=\"L1\" key=\"forward\">Forward/L1</MenuItem>\n        <MenuItem value=\"L2\" key=\"left\">Left/L2</MenuItem>\n        <MenuItem value=\"V0\" key=\"vibe1\">Vibe1/V0</MenuItem>\n        <MenuItem value=\"A0\" key=\"valve\">Valve/A0</MenuItem>\n        <MenuItem value=\"A1\" key=\"suck\">Suck/A1</MenuItem>\n      </Select>\n      <Button\n        onClick={() => downloadEditingScript()}\n        variant=\"contained\"\n        color=\"default\"\n        disabled={editing_axis === \"none\"}\n      >\n        Download script\n      </Button>\n\n      <Typography>Latency</Typography>\n      <Slider\n        value={latency}\n        min={-2000}\n        max={2000}\n        step={10}\n        track={false}\n        valueLabelDisplay={'auto'}\n        onChange={(e, value) => setLatency(value)}\n        marks={[{ value: -1000, label: 'Video 1s early' },{ value: 1000, label: 'Video 1s late' }]}\n      />\n      <FormControlLabel key=\"moving_pauses\" label=\"Moving pauses\"\n          control={\n              <Switch\n                  checked={moving_pauses}\n                  onChange={(e) => setMovingPauses(!moving_pauses)}\n                  name=\"Moving pauses\"\n                  value=\"moving_pauses\"\n                  color={'primary'}\n              />\n          }\n      />\n      <CardActions>\n        <Button\n          onClick={() => toggleRunning(running)}\n          variant=\"contained\"\n          color=\"default\"\n        >\n          {running ? 'STOP' : 'START'}\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default MosaVideoPlayer\n"],"sourceRoot":""}