{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","webpack:///./src/components/MosaComponents/MosaVideoPlayer.js"],"names":["IndexPage","Consumer","isSerialAvailable","connected","commandRobot","target","inputMethod","handleInputMethodChange","outputMethod","handleOutputMethodChange","settings","updateSettings","title","container","spacing","justify","item","xs","md","lg","value","exclusive","onChange","disabled","variant","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","Canvas","props","funscripts","axis","totalTime","vpos","rest","canvasRef","useRef","useEffect","ctx","clearRect","canvas","width","height","fillStyle","beginPath","moveTo","vis_width","entry","x","y","lineTo","stroke","draw","current","getContext","scroll_left","Math","max","floor","document","getElementById","scrollLeft","stle","maxHeight","maxWidth","overflow","id","style","canvas_width","ref","MosaVideoPlayer","useState","current_file","setCurrentFile","video_files","setVideoFiles","local_video_files","setLocalVideoFiles","running","setRunning","moving_pauses","setMovingPauses","moving_pause_start","setMovingPauseStart","video_length","setVideoLength","video_position","setVideoPosition","video_speed","setVideoSpeed","latency","setLatency","position","setPosition","setFunscripts","script_offsets","setScriptOffsets","editing_axis","setEditingAxis","axes","file","initVideo","a","filename","tmp2","undefined","video","play","ondurationchange","e","srcElement","duration","ontimeupdate","currentTime","fileItem","URL","getFile","src","createObjectURL","fh","text","txt","JSON","parse","file_base","replaceAll","fetches","push","fetch","headers","then","res","json","catch","err","console","log","warn","Promise","allSettled","window","hasOwnProperty","alert","showDirectoryPicker","dirHandle","videoFiles","values","kind","name","endsWith","videos","Object","keys","sort","useInterval","player","paused","current_msecs","tmp_position","tmp_offsets","map","inverted","actions","prev_offset","next_offset","length","prev_action","next_action","prev_val","clampedNum","next_val","where_in_interval","mid_val","abs","recover_degree","clampedFloat","selectVideoSpeed","speed","playbackRate","parseFloat","keydownListener","keydownEvent","key","repeat","pos","tmp","b","filter","speed_key_dict","addEventListener","removeEventListener","result","split","error","Card","CardContent","Typography","controls","marginLeft","backgroundColor","Button","onClick","openLocalFolder","color","Select","setFile","MenuItem","f","setEditAxis","element","createElement","setAttribute","encodeURIComponent","stringify","extension","display","body","appendChild","click","removeChild","downloadEditingScript","Slider","min","step","track","valueLabelDisplay","marks","label","FormControlLabel","control","Switch","checked","CardActions","toggleRunning"],"mappings":"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","file":"component---src-pages-index-js-ad6d391972f64d18b114.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { Card, Typography, CardContent, Grid, Divider } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n\nimport { MosaContext } from '../context/MosaContext'\n\nimport MosaOutputRangeControl from '../components/MosaComponents/MosaOutputRangeControl'\nimport MosaMotionControl from '../components/MosaComponents/MosaMotionControl'\nimport MosaPlanarControl from '../components/MosaComponents/MosaPlanarControl'\nimport MosaVibeControl from '../components/MosaComponents/MosaVibeControl'\nimport MosaSineControl from '../components/MosaComponents/MosaSineControl'\nimport MosaVisualizer from '../components/MosaComponents/MosaVisualizer'\nimport MosaRandomControl from '../components/MosaComponents/MosaRandomControl'\nimport MosaVideoPlayer from '../components/MosaComponents/MosaVideoPlayer'\n\nconst IndexPage = () => {\n  return (\n    <MosaContext.Consumer>\n      {({\n        isSerialAvailable,\n        connected,\n        commandRobot,\n        target,\n        inputMethod,\n        handleInputMethodChange,\n        outputMethod,\n        handleOutputMethodChange,\n        settings,\n        updateSettings,\n      }) => (\n        <Layout>\n          <SEO title=\"Home\" />\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item xs={12} md={4} lg={3}>\n              <Card>\n                <CardContent>\n                  <Typography>\n                    Input: {!inputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={inputMethod}\n                    exclusive\n                    onChange={handleInputMethodChange}\n                  >\n                    <ToggleButton value=\"web\">WEB</ToggleButton>\n                    <ToggleButton value=\"remote\" disabled>\n                      REMOTE\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography>\n                    Output: {!outputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={outputMethod}\n                    exclusive\n                    onChange={handleOutputMethodChange}\n                  >\n                    {isSerialAvailable && (\n                      <ToggleButton value=\"serial\">SERIAL</ToggleButton>\n                    )}\n                    <ToggleButton value=\"visualizer\">SR-VIS</ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography variant=\"caption\">\n                    (more I/O coming soon)\n                  </Typography>\n                  {!isSerialAvailable && ( // if serial not available, explain\n                    <>\n                      <br />\n                      <Typography>\n                        Could not detect serial capabilities. Please use the\n                        latest version of Chrome, open{' '}\n                        <code>chrome://flags</code>, and set\n                        <code>\n                          #enable-experimental-web-platform-features\n                        </code>{' '}\n                        (note that these are experimental features, use at your\n                        own risk, etc etc)\n                      </Typography>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              <hr />\n              <MosaVisualizer target={target} />\n              <hr />\n              <MosaOutputRangeControl\n                settings={settings}\n                updateSettings={updateSettings}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={5}>\n              <MosaMotionControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaVibeControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={4}>\n              <MosaPlanarControl\n                connected={connected}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaRandomControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaVideoPlayer\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaSineControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n          </Grid>\n          &nbsp;\n          <Divider />\n        </Layout>\n      )}\n    </MosaContext.Consumer>\n  )\n}\n\nexport default IndexPage\n","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControlLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Switch,\n  Typography,\n} from '@material-ui/core'\n\nimport { useInterval } from '../../hooks/useIntervalHook'\nimport { clampedFloat, clampedNum } from '../../utils/clamp'\n\nconst Canvas = props => {\n  const { funscripts, axis, totalTime, vpos, ...rest } = props\n  const canvasRef = useRef(null)\n  const vis_width = 800\n  const canvas_width = 20000 + vis_width\n\n  const draw = ctx => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.fillStyle = '#000000'\n    ctx.beginPath()\n    ctx.moveTo(vis_width / 2,50)\n    for(let entry of funscripts[axis][\"actions\"]) {\n      let x = entry[\"at\"] / totalTime * (canvas_width - vis_width) + vis_width / 2\n      let y = 100 - entry[\"pos\"]\n      ctx.lineTo(x, y)\n    }\n    ctx.stroke()\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    draw(context)\n  }, [funscripts, axis, totalTime])\n\n  useEffect(() => {\n    let scroll_left = Math.max(Math.floor(vpos / totalTime * (canvas_width - vis_width)), 0)\n    document.getElementById(\"fiudfzdifu\").scrollLeft = scroll_left\n  }, [vpos, totalTime])\n\n  let stle = {maxHeight: '120px', maxWidth: vis_width + 'px', overflow: 'hidden'}\n  return <div id=\"fiudfzdifu\" style={stle}>\n          <canvas width={canvas_width+\"px\"} height=\"100px\" ref={canvasRef} {...rest}/>\n         </div>\n}\n\nexport const MosaVideoPlayer = props => {\n  const { connected, target, commandRobot } = props\n\n  const [current_file, setCurrentFile] = useState(\"none\")\n  const [video_files, setVideoFiles] = useState([])\n  const [local_video_files, setLocalVideoFiles] = useState({})\n\n  const [running, setRunning] = useState(false)\n  const [moving_pauses, setMovingPauses] = useState(true)\n  const [moving_pause_start, setMovingPauseStart] = useState(0)\n\n  const [video_length, setVideoLength] = useState(0)\n  const [video_position, setVideoPosition] = useState(0)\n  const [video_speed, setVideoSpeed] = useState(\"100\")\n  const [latency, setLatency] = useState(0)\n  const [position, setPosition] = useState({})\n\n  const [funscripts, setFunscripts] = useState({})\n  const [script_offsets, setScriptOffsets] = useState({})\n\n  const [editing_axis, setEditingAxis] = useState(\"none\")\n\n  const axes = [[\"R2\", \".pitch.funscript\"],\n                [\"R1\", \".roll.funscript\"],\n                [\"R0\", \".twist.funscript\"],\n                [\"L1\", \".forward.funscript\"],\n                [\"A1\", \".suck.funscript\"],\n                [\"L0\", \".funscript\"]];\n\n  useInterval(() => {\n    if (running) {\n      let player = document.getElementById(\"idvideo\");\n      if(player.paused) return;\n      let current_msecs = player.currentTime * 1000.0 - latency;\n      let tmp_position = {...position};\n      let tmp_offsets = {...script_offsets};\n      for(let axis of axes.map((entry) => entry[0])) {\n        try {\n          if(funscripts[axis] === undefined) continue;\n          if(funscripts[axis][\"actions\"] === undefined) continue;\n          let inverted = !!funscripts[axis][\"inverted\"];\n\n          let actions = funscripts[axis][\"actions\"];\n          let prev_offset = script_offsets[axis];\n          if(actions[prev_offset][\"at\"] > current_msecs) prev_offset = 0;\n          let next_offset = prev_offset + 1;\n          while(next_offset < actions.length && actions[next_offset][\"at\"] < current_msecs) next_offset++;\n          if(next_offset < 1) continue;\n          prev_offset = next_offset - 1;\n          if(next_offset >= actions.length) next_offset = prev_offset;\n          if(actions[prev_offset][\"at\"] > current_msecs) next_offset = prev_offset;\n\n          let prev_action = actions[prev_offset];\n          let next_action = actions[next_offset];\n          let prev_val = clampedNum(prev_action[\"pos\"], 0, 100) * 10.0;\n          let next_val = clampedNum(next_action[\"pos\"], 0, 100) * 10.0;\n          if(inverted) {\n            prev_val = 1000 - prev_val;\n            next_val = 1000 - next_val;\n          }\n          let where_in_interval = prev_offset !== next_offset ?\n                                  (current_msecs - prev_action[\"at\"])*1.0 / (next_action[\"at\"] - prev_action[\"at\"])*1.0 :\n                                  0.5\n          let mid_val = (1.0 - where_in_interval) * prev_val + where_in_interval * next_val;\n\n          // if enabled, fill L0 pauses with slow motion\n          const pause_threshold = 2000\n          if(axis === \"L0\" && moving_pauses) {\n            if(mid_val > 850) {\n              if(moving_pause_start <= 0) {\n                // we are not in pause mode yet, keep watching\n                setMovingPauseStart(current_msecs)\n              } else {\n                if(current_msecs - moving_pause_start > pause_threshold) {\n                  // we are in a pause, create holding pattern\n                  mid_val = Math.abs(1000 - (((current_msecs - moving_pause_start - pause_threshold) / 4) % 2000)) * 0.8\n                }\n              }\n            } else {\n              // seems to be some action here, recover\n              if(moving_pause_start < 0) {\n                // we are recovering from a pause, advance to mid_val (finish in 600ms)\n                let recover_degree = clampedFloat((current_msecs - Math.abs(moving_pause_start)) / 600, 0, 1)\n                console.log(`recovering ${recover_degree}`)\n                mid_val = recover_degree * mid_val + (1 - recover_degree) * tmp_position[\"L0\"]\n                if(recover_degree > 0.95) setMovingPauseStart(0)\n              } else if(moving_pause_start > 0) {\n                // we might be in a pause\n                if(current_msecs - moving_pause_start > pause_threshold) {\n                  // we were in a pause, set to recover\n                  setMovingPauseStart(-current_msecs)\n                  mid_val = tmp_position[\"L0\"]\n                } else {\n                  // not paused yet, just reset timer\n                  setMovingPauseStart(0)\n                }\n              }\n            }\n          }\n\n          tmp_position[axis] = mid_val;\n          // if(axis === \"L0\") console.log(`${prev_offset} ${where_in_interval} ${mid_val} ${prev_val} ${next_val}`);\n          tmp_offsets[axis] = prev_offset;\n        } catch(e) {\n          console.log(e);\n        }\n      }\n      setPosition(tmp_position);\n      setScriptOffsets(tmp_offsets);\n      commandRobot(tmp_position, 0);\n    }\n  }, 50) // next execution in 50ms\n\n  async function setFile(file) {\n    function initVideo(filename, funscripts) {\n      setEditingAxis(\"none\")\n      setCurrentFile(filename)\n      setFunscripts(funscripts)\n      let tmp2 = {};\n      for(let axis in funscripts) tmp2[axis] = 0\n      setScriptOffsets(tmp2)\n      tmp2 = {};\n      for(let axis in funscripts) if(funscripts[axis] !== undefined) tmp2[axis] = 500\n      setPosition({...tmp2})\n      let video = document.getElementById(\"idvideo\")\n      video.play();\n      video.ondurationchange = (e) => setVideoLength(e.srcElement.duration * 1000)\n      video.ontimeupdate = (e) => setVideoPosition(e.srcElement.currentTime * 1000)\n    }\n\n    if(file in local_video_files) {\n      let fileItem = local_video_files[file]\n      document.getElementById(\"idvideo\").src = URL.createObjectURL(await fileItem[\"entry\"].getFile());\n      let funscripts = {}\n      for(let axis of axes) {\n        if(axis[0] in fileItem) {\n          let fh = await fileItem[axis[0]].getFile()\n          let txt = await fh.text()\n          funscripts[axis[0]] = JSON.parse(txt)\n        }\n      }\n      initVideo(file, funscripts)\n      return\n    }\n\n    let funscripts = {};\n    document.getElementById(\"idvideo\").src = `video/${file}`;\n    let file_base = \"video/\" + file.replaceAll(\".mp4\", \"\");\n    let fetches = [];\n    for(let axis of axes) {\n      fetches.push(\n        fetch(file_base + axis[1], { headers : { 'Content-Type': 'application/json', 'Accept': 'application/json' } } ).then(\n          (res) => res.json().then(\n            (json) => funscripts[axis[0]] = json\n          ).catch(\n            (err) => { console.log(err); funscripts[axis[0]] = undefined; }\n          )\n        ).catch(\n            (err) => { console.warn(err); funscripts[axis[0]] = undefined; }\n          )\n      )\n    }\n    Promise.allSettled(fetches).then(\n        () => { initVideo(file, funscripts) }\n    );\n  }\n\n  async function openLocalFolder() {\n    if(!window.hasOwnProperty(\"showDirectoryPicker\")) {\n      window.alert(\"Your browser does not support the File Syste API\")\n      return\n    }\n    const dirHandle = await window.showDirectoryPicker()\n    let videoFiles = {}\n    for await (const entry of dirHandle.values()) {\n      if(entry.kind === 'file') {\n        if(entry.name.endsWith(\".mp4\")) {\n          if(entry.name in videoFiles) {\n            videoFiles[entry.name][\"entry\"] = entry\n          } else {\n            videoFiles[entry.name] = {\"name\": entry.name, \"entry\": entry}\n          }\n          continue\n        }\n        if(entry.name.endsWith(\".funscript\")) {\n          for(let axis of axes) {\n            if(entry.name.endsWith(axis[1])) {\n              let name = entry.name.replaceAll(axis[1], \".mp4\")\n              if(name in videoFiles) {\n                videoFiles[name][axis[0]] = entry\n              } else {\n                videoFiles[name] = {\"name\": name, [axis[0]]: entry}\n              }\n              break\n            }\n          }\n        }\n      }\n    }\n    let videos = []\n    for(let e of Object.keys(videoFiles)) {\n      videos.push(e)\n    }\n    videos.sort()\n    setVideoFiles(videos)\n    setLocalVideoFiles(videoFiles)\n  }\n\n  const setEditAxis = axis => {\n    let tmp = {...funscripts}\n    if(tmp[axis] === undefined) {\n      tmp[axis] = {\"actions\": [{\"at\": 0, \"pos\": 50}]}\n      setFunscripts(tmp)\n      console.log(`created funscript file ${axis}`)\n      let tmp2 = {...script_offsets}\n      tmp2[axis] = 0\n      setScriptOffsets(tmp2)\n    }\n    setEditingAxis(axis)\n  }\n\n  const selectVideoSpeed = speed => {\n    let player = document.getElementById(\"idvideo\");\n    player.playbackRate = parseFloat(speed) / 100;\n    setVideoSpeed(speed)\n  }\n\n  const keydownListener = keydownEvent => {\n    const { key, target, repeat } = keydownEvent;\n    if (repeat) return;\n    if(key >= '1' && key <= '9') {\n      let pos = (key - '1') / 8 * 100\n      let tmp = {...funscripts}\n      let player = document.getElementById(\"idvideo\")\n      let current_msecs = player.currentTime * 1000.0 - latency\n      tmp[editing_axis][\"actions\"].push({\"at\": Math.floor(current_msecs), \"pos\": Math.floor(pos)})\n      tmp[editing_axis][\"actions\"].sort((a, b) => a[\"at\"] - b[\"at\"])\n      setFunscripts(tmp)\n      console.log(`Axis ${editing_axis} has ${tmp[editing_axis][\"actions\"].length} actions`)\n    }\n    if(key === '0') {\n      let tmp = {...funscripts}\n      let player = document.getElementById(\"idvideo\")\n      let current_msecs = player.currentTime * 1000 - latency\n      tmp[editing_axis][\"actions\"] = tmp[editing_axis][\"actions\"].filter( (e) => e[\"at\"] < current_msecs - 1500 || e[\"at\"] > current_msecs + 1500)\n      setFunscripts(tmp)\n      player.currentTime = (current_msecs - 3000 + latency) / 1000\n    }\n    const speed_key_dict = { 'q': 10, 'w': 25, 'e': 50, 'r': 100, 't': 200 }\n    if(key in speed_key_dict) {\n      selectVideoSpeed(speed_key_dict[key])\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keydownListener, true)\n    return () => window.removeEventListener(\"keydown\", keydownListener, true)\n  })\n\n  const toggleRunning = running => {\n    setRunning(!running)\n  }\n\n  const downloadEditingScript = () => {\n    let element = document.createElement('a');\n    element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(funscripts[editing_axis])));\n    let extension = \".json\"\n    for(let axis of axes) {\n      if(axis[0] === editing_axis) extension = axis[1]\n    }\n    element.setAttribute('download', current_file.replaceAll(\".mp4\", extension));\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  useEffect(() => {\n    if(video_files.length > 0) return;\n    fetch(\"video/videos.txt\", {})\n    .then(res => res.text())\n    .then(\n          (result) => { setVideoFiles(result.split(\"\\n\")) },\n          (error) => { alert(\"Could not load list of video files\"); }\n    )\n  })\n\n  let stle = {position: 'absolute', marginLeft: '399px', width: '2px', height: '100px', backgroundColor: 'grey'}\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Video {Math.floor(position[\"L0\"])} {Math.floor(position[\"R2\"])} {Math.floor(position[\"R1\"])}</Typography>\n        <hr />\n        <video id=\"idvideo\" width=\"100%\" controls>\n        </video>\n        {editing_axis !== \"none\" ? <div style={stle}/> : \"\"}\n        {editing_axis !== \"none\" ? <Canvas vpos={video_position} funscripts={funscripts} axis={editing_axis} totalTime={video_length}></Canvas> : \"\"}\n      </CardContent>\n      <Typography>File</Typography>\n      <Button\n        onClick={() => openLocalFolder()}\n        variant=\"contained\"\n        color=\"default\"\n      >\n        Open Client Video Folder\n      </Button>\n      <Select\n        id=\"idselect\"\n        value={current_file}\n        onChange={(e, value) => setFile(value.props.value)}>\n        <MenuItem value=\"none\" key=\"none\">no video</MenuItem>\n        {video_files.map((f) => (\n          <MenuItem value={f} key={f} >{f}</MenuItem>\n        ))}\n      </Select>\n\n      <Select\n        value={video_speed}\n        onChange={(e, value) => selectVideoSpeed(value.props.value)}>\n        <MenuItem value=\"10\" key=\"10\">10%</MenuItem>\n        <MenuItem value=\"25\" key=\"25\">25%</MenuItem>\n        <MenuItem value=\"50\" key=\"50\">50%</MenuItem>\n        <MenuItem value=\"100\" key=\"100\">100%</MenuItem>\n        <MenuItem value=\"200\" key=\"200\">200%</MenuItem>\n      </Select>\n      <Select\n        value={editing_axis}\n        onChange={(e, value) => setEditAxis(value.props.value)}>\n        <MenuItem value=\"none\" key=\"none\">none</MenuItem>\n        <MenuItem value=\"L0\" key=\"main\">Main/L0</MenuItem>\n        <MenuItem value=\"R2\" key=\"pitch\">Pitch/R2</MenuItem>\n        <MenuItem value=\"R1\" key=\"roll\">Roll/R1</MenuItem>\n        <MenuItem value=\"R0\" key=\"twist\">Twist/R0</MenuItem>\n        <MenuItem value=\"L1\" key=\"forward\">Forward/L1</MenuItem>\n        <MenuItem value=\"L2\" key=\"left\">Left/L2</MenuItem>\n        <MenuItem value=\"V0\" key=\"vibe1\">Vibe1/V0</MenuItem>\n        <MenuItem value=\"A0\" key=\"valve\">Valve/A0</MenuItem>\n        <MenuItem value=\"A1\" key=\"suck\">Suck/A1</MenuItem>\n      </Select>\n      <Button\n        onClick={() => downloadEditingScript()}\n        variant=\"contained\"\n        color=\"default\"\n        disabled={editing_axis === \"none\"}\n      >\n        Download script\n      </Button>\n\n      <Typography>Latency</Typography>\n      <Slider\n        value={latency}\n        min={-2000}\n        max={2000}\n        step={10}\n        track={false}\n        valueLabelDisplay={'auto'}\n        onChange={(e, value) => setLatency(value)}\n        marks={[{ value: -1000, label: 'Video 1s early' },{ value: 1000, label: 'Video 1s late' }]}\n      />\n      <FormControlLabel key=\"moving_pauses\" label=\"Moving pauses\"\n          control={\n              <Switch\n                  checked={moving_pauses}\n                  onChange={(e) => setMovingPauses(!moving_pauses)}\n                  name=\"Moving pauses\"\n                  value=\"moving_pauses\"\n                  color={'primary'}\n              />\n          }\n      />\n      <CardActions>\n        <Button\n          onClick={() => toggleRunning(running)}\n          variant=\"contained\"\n          color=\"default\"\n        >\n          {running ? 'STOP' : 'START'}\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default MosaVideoPlayer\n"],"sourceRoot":""}