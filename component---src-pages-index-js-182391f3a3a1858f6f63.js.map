{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","webpack:///./src/components/MosaComponents/MosaVideoPlayer.js"],"names":["IndexPage","Consumer","isSerialAvailable","connected","commandRobot","getMosaContextWorkerPort","target","inputMethod","handleInputMethodChange","outputMethod","handleOutputMethodChange","settings","updateSettings","title","container","spacing","justify","item","xs","md","lg","value","exclusive","onChange","disabled","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","Canvas","props","funscripts","axis","totalTime","vpos","rest","canvasRef","useRef","useEffect","ctx","clearRect","canvas","width","height","fillStyle","beginPath","moveTo","vis_width","entry","x","y","lineTo","stroke","draw","current","getContext","scroll_left","Math","max","floor","document","getElementById","scrollLeft","stle","maxHeight","maxWidth","overflow","id","style","canvas_width","ref","worker","Worker","window","location","pathname","startsWith","MosaVideoPlayer","useState","current_file","setCurrentFile","video_files","setVideoFiles","local_video_files","setLocalVideoFiles","moving_pauses","setMovingPauses","video_length","setVideoLength","video_position","setVideoPosition","video_speed","setVideoSpeed","latency","setLatency","setFunscripts","editing_axis","setEditingAxis","axes","file","initVideo","a","filename","lsLatency","localStorage","getItem","parseFloat","postMessage","video","play","ondurationchange","e","srcElement","duration","ontimeupdate","veTimeMs","currentTime","fileItem","URL","getFile","src","createObjectURL","fh","text","txt","JSON","parse","pathPrefix","file_base","replaceAll","fetches","push","fetch","headers","then","res","json","catch","err","console","log","undefined","warn","Promise","allSettled","hasOwnProperty","alert","showDirectoryPicker","dirHandle","videoFiles","values","kind","name","endsWith","videos","Object","keys","sort","selectVideoSpeed","speed","playbackRate","playback_rate","keydownListener","keydownEvent","key","repeat","pos","tmp","current_msecs","b","length","player","filter","speed_key_dict","addEventListener","removeEventListener","setRunning","running","result","split","error","port","position","marginLeft","backgroundColor","useMemo","Card","CardContent","Typography","variant","onPlay","onPause","controls","Button","onClick","openLocalFolder","color","Select","setFile","MenuItem","map","f","element","createElement","setAttribute","encodeURIComponent","stringify","extension","display","body","appendChild","click","removeChild","downloadEditingScript","Slider","min","step","track","valueLabelDisplay","setItem","updateLatency","marks","label","FormControlLabel","control","Switch","checked"],"mappings":"4FAAA,wPA4IeA,UAzHG,WAChB,OACE,kBAAC,IAAYC,SAAb,MACG,gBACCC,EADD,EACCA,kBACAC,EAFD,EAECA,UACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,yBACAC,EALD,EAKCA,OACAC,EAND,EAMCA,YACAC,EAPD,EAOCA,wBACAC,EARD,EAQCA,aACAC,EATD,EASCA,yBACAC,EAVD,EAUCA,SACAC,EAXD,EAWCA,eAXD,OAaC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAClC,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,gBACWb,GAAe,iBAE1B,kBAAC,IAAD,CACEc,MAAOd,EACPe,WAAS,EACTC,SAAUf,GAEV,kBAAC,IAAD,CAAca,MAAM,OAApB,OACA,kBAAC,IAAD,CAAcA,MAAM,SAASG,UAAQ,GAArC,WAIF,6BACA,6BACA,kBAAC,IAAD,iBACYf,GAAgB,iBAE5B,kBAAC,IAAD,CACEY,MAAOZ,EACPa,WAAS,EACTC,SAAUb,GAETR,GACC,kBAAC,IAAD,CAAcmB,MAAM,UAApB,UAEF,kBAAC,IAAD,CAAcA,MAAM,cAApB,YAEAnB,GACA,oCACE,6BACA,kBAAC,IAAD,2FAEiC,IAC/B,gDAHF,YAIE,4EAEQ,IANV,iFAcR,6BACA,kBAAC,IAAD,CAAgBI,OAAQA,IACxB,6BACA,kBAAC,IAAD,CACEK,SAAUA,EACVC,eAAgBA,KAGpB,kBAAC,IAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,IAAD,CACEjB,UAAWA,EACXG,OAAQA,EACRF,aAAcA,IAEhB,6BACA,kBAAC,IAAD,CACED,UAAWA,EACXG,OAAQA,EACRF,aAAcA,KAGlB,kBAAC,IAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,IAAD,CACEjB,UAAWA,EACXC,aAAcA,IAEhB,6BACA,kBAAC,IAAD,CACED,UAAWA,EACXG,OAAQA,EACRD,yBAA0BA,IAE5B,6BACA,kBAAC,IAAD,CACEF,UAAWA,EACXG,OAAQA,EACRD,yBAA0BA,IAE5B,6BACA,kBAAC,IAAD,CACEF,UAAWA,EACXG,OAAQA,EACRF,aAAcA,MA7FtB,IAkGE,kBAAC,IAAD,Y,+FCrIK,SAASqB,EAAeC,GACrC,IAAIC,EAEJ,GAAsB,oBAAXC,OAAwB,CACjC,GAAIA,OAAOC,eAEK,OADdF,EAASD,EAASE,OAAOC,gBACL,OAAOF,EAAOG,KAAKJ,GAGzC,GAAIE,OAAOG,UAEK,OADdJ,EAASD,EAASE,OAAOG,WACL,OAAOJ,EAAOG,KAAKJ,GAI3C,MAAM,IAAIM,UAAU,gC,u8BCFtB,IAAMC,EAAS,SAAAC,GAAU,IACfC,EAA+CD,EAA/CC,WAAYC,EAAmCF,EAAnCE,KAAMC,EAA6BH,EAA7BG,UAAWC,EAAkBJ,EAAlBI,KAASC,EADxB,YACiCL,EADjC,0CAEhBM,EAAYC,iBAAO,MAiBzBC,qBAAU,YAbG,SAAAC,GACXA,EAAIC,UAAU,EAAG,EAAGD,EAAIE,OAAOC,MAAOH,EAAIE,OAAOE,QACjDJ,EAAIK,UAAY,UAChBL,EAAIM,YACJN,EAAIO,OAAOC,IAAc,IACzB,IAAI,IAAJ,MAAiBhB,EAAWC,GAAX,WAAjB,aAA8C,CAAC,IAAvCgB,EAAsC,QACxCC,EAAID,EAAK,GAASf,EAAd,IAAuDc,IAC3DG,EAAI,IAAMF,EAAK,IACnBT,EAAIY,OAAOF,EAAGC,GAEhBX,EAAIa,SAMJC,CAFejB,EAAUkB,QACFC,WAAW,SAEjC,CAACxB,EAAYC,EAAMC,IAEtBK,qBAAU,WACR,IAAIkB,EAAcC,KAAKC,IAAID,KAAKE,MAAMzB,EAAOD,EAAP,KAAgD,GACtF2B,SAASC,eAAe,cAAcC,WAAaN,IAClD,CAACtB,EAAMD,IAEV,IAAI8B,EAAO,CAACC,UAAW,QAASC,SAAUlB,QAAkBmB,SAAU,UACtE,OAAO,yBAAKC,GAAG,aAAaC,MAAOL,GAC3B,0CAAQrB,MAAO2B,UAAmB1B,OAAO,QAAQ2B,IAAKlC,GAAeD,MAKzEoC,EAAS,IAAIC,QAAQC,OAAOC,SAASC,SAASC,WAAW,UAAY,SAAW,KAAO,mCAqT9EC,IAnTgB,SAAA/C,GAAU,IAC/B/B,EAAwC+B,EAAxC/B,UAAWE,EAA6B6B,EAA7B7B,yBADmB,EAGC6E,mBAAS,QAAzCC,EAH+B,KAGjBC,EAHiB,OAIDF,mBAAS,IAAvCG,EAJ+B,KAIlBC,EAJkB,OAKUJ,mBAAS,IAAlDK,EAL+B,KAKZC,EALY,OAOGN,oBAAS,GAA3CO,EAP+B,KAOhBC,EAPgB,OASCR,mBAAS,GAAzCS,EAT+B,KASjBC,EATiB,OAUKV,mBAAS,GAA7CW,EAV+B,KAUfC,EAVe,OAWDZ,mBAAS,OAAvCa,EAX+B,KAWlBC,EAXkB,OAYRd,mBAAS,GAAhCe,EAZ+B,KAYtBC,EAZsB,OAcFhB,mBAAS,IAAtC/C,EAd+B,KAcnBgE,EAdmB,OAgBCjB,mBAAS,QAAzCkB,EAhB+B,KAgBjBC,EAhBiB,KAkBhCC,EAAO,CAAC,CAAC,KAAM,oBACP,CAAC,KAAM,mBACP,CAAC,KAAM,oBACP,CAAC,KAAM,sBACP,CAAC,KAAM,mBACP,CAAC,KAAM,eAvBiB,4CAyBtC,WAAuBC,GAAvB,IACWC,EADX,qCAAAC,EAAA,yDACWD,EADX,SACqBE,EAAUvE,GAC3BkE,EAAe,QACfjB,EAAesB,GACfP,EAAchE,GACd,IAAIwE,EAAYC,aAAaC,QAAb,4BAAiDH,GAC9DC,GAAWT,EAAWY,WAAWH,IACpChC,EAAOoC,YAAY,CAAC,mBAAoB,CAAE5E,WAAYA,KACtD,IAAI6E,EAAQhD,SAASC,eAAe,WACpC+C,EAAMC,OACND,EAAME,iBAAmB,SAACC,GACxBvB,EAAuC,IAAxBuB,EAAEC,WAAWC,WAE9BL,EAAMM,aAAe,SAACH,GACpB,IAAMI,EAAsC,IAA3BJ,EAAEC,WAAWI,YAC9B7C,EAAOoC,YAAY,CAAC,qBAAsBQ,IAC1CzB,EAAiByB,OAIlBhB,KAAQhB,GApBb,wBAqBQkC,EAAWlC,EAAkBgB,GArBrC,KAsB6CmB,IAtB7C,SAsBuED,EAAQ,MAAUE,UAtBzF,mBAsBI3D,SAASC,eAAe,WAAW2D,IAtBvC,KAsBiDC,gBAtBjD,gBAuBQ1F,EAAa,GAvBrB,IAwBoBmE,GAxBpB,+CAwBYlE,EAxBZ,SAyBc,KAAMqF,GAzBpB,kCA0BuBA,EAASrF,EAAK,IAAIuF,UA1BzC,eA0BYG,EA1BZ,iBA2BwBA,EAAGC,OA3B3B,QA2BYC,EA3BZ,OA4BQ7F,EAAWC,EAAK,IAAM6F,KAAKC,MAAMF,GA5BzC,uCA+BIxB,EAAUD,EAAMpE,GA/BpB,2BAwCE,IALIA,EAAa,GACbgG,EAAatD,OAAOC,SAASC,SAASC,WAAW,UAAY,SAAW,IAC5EhB,SAASC,eAAe,WAAW2D,IAASO,EAA5C,SAA+D5B,EAC3D6B,EAAYD,EAAa,SAAW5B,EAAK8B,WAAW,OAAQ,IAC5DC,EAAU,GAvChB,iBAwCUlG,EAxCV,QAyCIkG,EAAQC,KACNC,MAAMJ,EAAYhG,EAAK,GAAI,CAAEqG,QAAU,CAAE,eAAgB,mBAAoB,OAAU,sBAAyBC,MAC9G,SAACC,GAAD,OAASA,EAAIC,OAAOF,MAClB,SAACE,GAAD,OAAUzG,EAAWC,EAAK,IAAMwG,KAChCC,OACA,SAACC,GAAUC,QAAQC,IAAIF,GAAM3G,EAAWC,EAAK,SAAM6G,QAErDJ,OACE,SAACC,GAAUC,QAAQG,KAAKJ,GAAM3G,EAAWC,EAAK,SAAM6G,OATxD,EAAJ,EAAgB3C,KAAhB,aAAuB,IAavB6C,QAAQC,WAAWd,GAASI,MACxB,WAAQlC,EAAUD,EAAMpE,MAtD9B,6CAzBsC,kEAmFtC,8DAAAsE,EAAA,yDACM5B,OAAOwE,eAAe,uBAD5B,uBAEIxE,OAAOyE,MAAM,qDAFjB,0CAK0BzE,OAAO0E,sBALjC,OAKQC,EALR,OAMMC,EAAa,GANnB,uBAO4BD,EAAUE,UAPtC,+HAQsB,UADHtG,EAPnB,GAQauG,KARb,qBASSvG,EAAMwG,KAAKC,SAAS,QAT7B,wBAUWzG,EAAMwG,QAAQH,EACfA,EAAWrG,EAAMwG,MAAjB,MAAkCxG,EAElCqG,EAAWrG,EAAMwG,MAAQ,CAAC,KAAQxG,EAAMwG,KAAM,MAASxG,GAbjE,oCAiBSA,EAAMwG,KAAKC,SAAS,cAjB7B,qBAkBwBvD,GAlBxB,4CAkBgBlE,EAlBhB,SAmBagB,EAAMwG,KAAKC,SAASzH,EAAK,IAnBtC,wBAoBgBwH,EAAOxG,EAAMwG,KAAKvB,WAAWjG,EAAK,GAAI,WAC/BqH,EACTA,EAAWG,GAAMxH,EAAK,IAAMgB,EAE5BqG,EAAWG,KAAX,GAAoB,KAAQA,IAAOxH,EAAK,IAAKgB,EAA7C,GAxBd,+VAiCE,IADI0G,EAAS,GACT,EAAJ,IAAaC,OAAOC,KAAKP,GAAzB,eAAQtC,EAA8B,KACpC2C,EAAOvB,KAAKpB,GAEd2C,EAAOG,OACP3E,EAAcwE,GACdtE,EAAmBiE,GAtCrB,6EAnFsC,sBA4HtC,IAWMS,EAAmB,SAAAC,GACVnG,SAASC,eAAe,WAC9BmG,aAAetD,WAAWqD,GAAS,IAC1CxF,EAAOoC,YAAY,CAAC,mBAAoB,CAAEsD,cAAevD,WAAWqD,GAAS,OAC7EnE,EAAcmE,IAGVG,GAAkB,SAAAC,GAAiB,IAC/BC,EAAwBD,EAAxBC,IAAwBD,EAAnBjK,OACb,IADgCiK,EAAXE,OACrB,CACA,GAAGD,GAAO,KAAOA,GAAO,IAAK,CAC3B,IAAIE,GAAOF,EAAM,KAAO,EAAI,IACxBG,EAAG,iBAAOxI,GAEVyI,EAAqC,IAD5B5G,SAASC,eAAe,WACVuD,YAAuBvB,EAClD0E,EAAIvE,GAAJ,QAA6BmC,KAAK,CAAC,GAAM1E,KAAKE,MAAM6G,GAAgB,IAAO/G,KAAKE,MAAM2G,KACtFC,EAAIvE,GAAJ,QAA6B6D,MAAK,SAACxD,EAAGoE,GAAJ,OAAUpE,EAAC,GAASoE,EAAC,MACvD1E,EAAcwE,GACdhG,EAAOoC,YAAY,CAAC,mBAAoB,CAAE5E,WAAYA,KACtD4G,QAAQC,IAAR,QAAoB5C,EAApB,QAAwCuE,EAAIvE,GAAJ,QAA6B0E,OAArE,YAEF,GAAW,MAARN,EAAa,CACd,IAAIG,EAAG,iBAAOxI,GACV4I,EAAS/G,SAASC,eAAe,WACjC2G,EAAqC,IAArBG,EAAOvD,YAAqBvB,EAChD0E,EAAIvE,GAAJ,QAA+BuE,EAAIvE,GAAJ,QAA6B4E,QAAQ,SAAC7D,GAAD,OAAOA,EAAC,GAASyD,EAAgB,MAAQzD,EAAC,GAASyD,EAAgB,QACvIzE,EAAcwE,GACdhG,EAAOoC,YAAY,CAAC,mBAAoB,CAAE5E,WAAYA,KACtD4I,EAAOvD,aAAeoD,EAAgB,IAAO3E,GAAW,IAE1D,IAAMgF,EAAiB,CAAE,EAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,IAAK,EAAK,KAChET,KAAOS,GACRf,EAAiBe,EAAeT,MAIpC9H,qBAAU,WAER,OADAmC,OAAOqG,iBAAiB,UAAWZ,IAAiB,GAC7C,kBAAMzF,OAAOsG,oBAAoB,UAAWb,IAAiB,OAGtE,IAAMc,GAAa,SAAAC,GACjB1G,EAAOoC,YAAY,CAAC,mBAAoB,CAAEsE,QAASA,MAiBrD3I,qBAAU,WACR,KAAG2C,EAAYyF,OAAS,GAAxB,CACA,IAAI3C,EAAatD,OAAOC,SAASC,SAASC,WAAW,UAAY,SAAW,IAC5EwD,MAASL,EAAJ,mBAAkC,IACtCO,MAAK,SAAAC,GAAG,OAAIA,EAAIZ,UAChBW,MACK,SAAC4C,GAAahG,EAAcgG,EAAOC,MAAM,UACzC,SAACC,GAAYlC,MAAM,4CAExB,IAEH5G,qBAAU,WACR,IAAM+I,EAAOpL,IACbsE,EAAOoC,YAAY,CAAC,iBAAkB0E,GAAO,CAACA,MAC7C,IAEH,IAMItH,GAAO,CAACuH,SAAU,WAAYC,WAAY,QAAS7I,MAAO,MAAOC,OAAQ,QAAS6I,gBAAiB,QAwFvG,OAvFeC,mBAAQ,kBACrB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,SACA,6BACA,2BAAO1H,GAAG,UAAUzB,MAAM,OAAOoJ,OAAQ,kBAAMd,IAAW,IAAOe,QAAS,kBAAMf,IAAW,IAAQgB,UAAQ,IAEzF,SAAjBhG,EAA0B,yBAAK5B,MAAOL,KAAU,GAC/B,SAAjBiC,EAA0B,kBAAC,EAAD,CAAQ9D,KAAMuD,EAAgB1D,WAAYA,EAAYC,KAAMgE,EAAc/D,UAAWsD,IAA0B,IAE5I,kBAACqG,EAAA,EAAD,aACA,kBAACK,EAAA,EAAD,CACEC,QAAS,kBArOuB,0CAqOjBC,IACfN,QAAQ,YACRO,MAAM,WAHR,4BAOA,kBAACC,EAAA,EAAD,CACElI,GAAG,WACHlD,MAAO8D,EACP5D,SAAU,SAAC4F,EAAG9F,GAAJ,OA9OsB,2CA8ORqL,CAAQrL,EAAMa,MAAMb,SAC5C,kBAACsL,EAAA,EAAD,CAAUtL,MAAM,OAAOmJ,IAAI,QAA3B,YACCnF,EAAYuH,KAAI,SAACC,GAAD,OACf,kBAACF,EAAA,EAAD,CAAUtL,MAAOwL,EAAGrC,IAAKqC,GAAKA,OAIlC,kBAACJ,EAAA,EAAD,CACEpL,MAAO0E,EACPxE,SAAU,SAAC4F,EAAG9F,GAAJ,OAAc6I,EAAiB7I,EAAMa,MAAMb,SACrD,kBAACsL,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,MAAzB,OACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,MAAzB,OACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,MAAzB,OACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,MAAzB,OACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,MAAMmJ,IAAI,OAA1B,QACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,MAAMmJ,IAAI,OAA1B,SAEF,kBAACiC,EAAA,EAAD,CACEpL,MAAO+E,EACP7E,SAAU,SAAC4F,EAAG9F,GAAJ,OArIIe,EAqIsBf,EAAMa,MAAMb,WAnInC4H,KADb0B,EAAG,iBAAOxI,IACPC,KACLuI,EAAIvI,GAAQ,CAAC,QAAW,CAAC,CAAC,GAAM,EAAG,IAAO,MAC1C+D,EAAcwE,GACdhG,EAAOoC,YAAY,CAAC,mBAAoB,CAAE5E,WAAYA,KACtD4G,QAAQC,IAAR,0BAAsC5G,SAExCiE,EAAejE,GARG,IAAAA,EACduI,IAqIA,kBAACgC,EAAA,EAAD,CAAUtL,MAAM,OAAOmJ,IAAI,QAA3B,QACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,QAAzB,WACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,SAAzB,YACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,QAAzB,WACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,SAAzB,YACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,WAAzB,cACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,QAAzB,WACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,SAAzB,YACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,SAAzB,YACA,kBAACmC,EAAA,EAAD,CAAUtL,MAAM,KAAKmJ,IAAI,QAAzB,YAEF,kBAAC6B,EAAA,EAAD,CACEC,QAAS,kBA1Fe,WAC5B,IAAIQ,EAAU9I,SAAS+I,cAAc,KACrCD,EAAQE,aAAa,OAAQ,uCAAyCC,mBAAmBhF,KAAKiF,UAAU/K,EAAWiE,MAEnH,IADA,IACA,EADI+G,EAAY,QAChB,IAAgB7G,KAAhB,aAAsB,CAAC,IAAflE,EAAc,QACjBA,EAAK,KAAOgE,IAAc+G,EAAY/K,EAAK,IAEhD0K,EAAQE,aAAa,WAAY7H,EAAakD,WAAW,OAAQ8E,IACjEL,EAAQtI,MAAM4I,QAAU,OACxBpJ,SAASqJ,KAAKC,YAAYR,GAC1BA,EAAQS,QACRvJ,SAASqJ,KAAKG,YAAYV,GA+EPW,IACfxB,QAAQ,YACRO,MAAM,UACNhL,SAA2B,SAAjB4E,GAJZ,mBASA,kBAAC4F,EAAA,EAAD,gBACA,kBAAC0B,EAAA,EAAD,CACErM,MAAO4E,EACP0H,KAAM,IACN7J,IAAK,IACL8J,KAAM,GACNC,OAAO,EACPC,kBAAmB,OACnBvM,SAAU,SAAC4F,EAAG9F,IA5EE,SAAAA,GACpBsD,EAAOoC,YAAY,CAAC,mBAAoB,CAAEd,QAAS5E,KACnD6E,EAAW7E,GACXuF,aAAamH,QAAb,4BAAiD5I,EAAjD,GAAoE9D,GAyEtC2M,CAAc3M,IACxC4M,MAAO,CAAC,CAAE5M,OAAQ,IAAM6M,MAAO,kBAAmB,CAAE7M,MAAO,IAAM6M,MAAO,oBAE1E,kBAACC,EAAA,EAAD,CAAkB3D,IAAI,gBAAgB0D,MAAM,gBACxCE,QACI,kBAACC,EAAA,EAAD,CACIC,QAAS7I,EACTlE,SAAU,SAAC4F,GAAD,OAAOzB,GAAiBD,IAClCmE,KAAK,gBACLvI,MAAM,gBACNmL,MAAO,iBAKlB,CAACrM,EAAWgF,EAAcE,EAAaI,EACtCE,EAAcE,EAAgBE,EAAaE,EAAS9D,EAAYiE","file":"component---src-pages-index-js-182391f3a3a1858f6f63.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { Card, Typography, CardContent, Grid, Divider } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n\nimport { MosaContext } from '../context/MosaContext'\n\nimport MosaOutputRangeControl from '../components/MosaComponents/MosaOutputRangeControl'\nimport MosaMotionControl from '../components/MosaComponents/MosaMotionControl'\nimport MosaPlanarControl from '../components/MosaComponents/MosaPlanarControl'\nimport MosaVibeControl from '../components/MosaComponents/MosaVibeControl'\nimport MosaSineControl from '../components/MosaComponents/MosaSineControl'\nimport MosaVisualizer from '../components/MosaComponents/MosaVisualizer'\nimport MosaRandomControl from '../components/MosaComponents/MosaRandomControl'\nimport MosaVideoPlayer from '../components/MosaComponents/MosaVideoPlayer'\n\nconst IndexPage = () => {\n  return (\n    <MosaContext.Consumer>\n      {({\n        isSerialAvailable,\n        connected,\n        commandRobot,\n        getMosaContextWorkerPort,\n        target,\n        inputMethod,\n        handleInputMethodChange,\n        outputMethod,\n        handleOutputMethodChange,\n        settings,\n        updateSettings,\n      }) => (\n        <Layout>\n          <SEO title=\"Home\" />\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item xs={12} md={4} lg={3}>\n              <Card>\n                <CardContent>\n                  <Typography>\n                    Input: {!inputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={inputMethod}\n                    exclusive\n                    onChange={handleInputMethodChange}\n                  >\n                    <ToggleButton value=\"web\">WEB</ToggleButton>\n                    <ToggleButton value=\"remote\" disabled>\n                      REMOTE\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography>\n                    Output: {!outputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={outputMethod}\n                    exclusive\n                    onChange={handleOutputMethodChange}\n                  >\n                    {isSerialAvailable && (\n                      <ToggleButton value=\"serial\">SERIAL</ToggleButton>\n                    )}\n                    <ToggleButton value=\"visualizer\">SR-VIS</ToggleButton>\n                  </ToggleButtonGroup>\n                  {!isSerialAvailable && ( // if serial not available, explain\n                    <>\n                      <br />\n                      <Typography>\n                        Could not detect serial capabilities. Please use the\n                        latest version of Chrome, open{' '}\n                        <code>chrome://flags</code>, and set\n                        <code>\n                          #enable-experimental-web-platform-features\n                        </code>{' '}\n                        (note that these are experimental features, use at your\n                        own risk, etc etc)\n                      </Typography>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              <hr />\n              <MosaVisualizer target={target} />\n              <hr />\n              <MosaOutputRangeControl\n                settings={settings}\n                updateSettings={updateSettings}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={5}>\n              <MosaMotionControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaVibeControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={4}>\n              <MosaPlanarControl\n                connected={connected}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaRandomControl\n                connected={connected}\n                target={target}\n                getMosaContextWorkerPort={getMosaContextWorkerPort}\n              />\n              <hr />\n              <MosaVideoPlayer\n                connected={connected}\n                target={target}\n                getMosaContextWorkerPort={getMosaContextWorkerPort}\n              />\n              <hr />\n              <MosaSineControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n          </Grid>\n          &nbsp;\n          <Divider />\n        </Layout>\n      )}\n    </MosaContext.Consumer>\n  )\n}\n\nexport default IndexPage\n","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormControlLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Switch,\n  Typography,\n} from '@material-ui/core'\n\nconst Canvas = props => {\n  const { funscripts, axis, totalTime, vpos, ...rest } = props\n  const canvasRef = useRef(null)\n  const vis_width = 800\n  const canvas_width = 20000 + vis_width\n\n  const draw = ctx => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.fillStyle = '#000000'\n    ctx.beginPath()\n    ctx.moveTo(vis_width / 2,50)\n    for(let entry of funscripts[axis][\"actions\"]) {\n      let x = entry[\"at\"] / totalTime * (canvas_width - vis_width) + vis_width / 2\n      let y = 100 - entry[\"pos\"]\n      ctx.lineTo(x, y)\n    }\n    ctx.stroke()\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    draw(context)\n  }, [funscripts, axis, totalTime])\n\n  useEffect(() => {\n    let scroll_left = Math.max(Math.floor(vpos / totalTime * (canvas_width - vis_width)), 0)\n    document.getElementById(\"fiudfzdifu\").scrollLeft = scroll_left\n  }, [vpos, totalTime])\n\n  let stle = {maxHeight: '120px', maxWidth: vis_width + 'px', overflow: 'hidden'}\n  return <div id=\"fiudfzdifu\" style={stle}>\n          <canvas width={canvas_width+\"px\"} height=\"100px\" ref={canvasRef} {...rest}/>\n         </div>\n}\n\n// create web worker\nconst worker = new Worker((window.location.pathname.startsWith(\"/mosa/\") ? \"/mosa/\" : \"/\") + \"worker/mosaVideoPlayerWorker.js\")  // see static/worker/mosaVideoPlayerWorker.js\n\nexport const MosaVideoPlayer = props => {\n  const { connected, getMosaContextWorkerPort } = props\n\n  const [current_file, setCurrentFile] = useState(\"none\")\n  const [video_files, setVideoFiles] = useState([])\n  const [local_video_files, setLocalVideoFiles] = useState({})\n\n  const [moving_pauses, setMovingPauses] = useState(false)\n\n  const [video_length, setVideoLength] = useState(0)\n  const [video_position, setVideoPosition] = useState(0)\n  const [video_speed, setVideoSpeed] = useState(\"100\")\n  const [latency, setLatency] = useState(0)\n\n  const [funscripts, setFunscripts] = useState({})\n\n  const [editing_axis, setEditingAxis] = useState(\"none\")\n\n  const axes = [[\"R2\", \".pitch.funscript\"],\n                [\"R1\", \".roll.funscript\"],\n                [\"R0\", \".twist.funscript\"],\n                [\"L1\", \".forward.funscript\"],\n                [\"A1\", \".suck.funscript\"],\n                [\"L0\", \".funscript\"]];\n\n  async function setFile(file) {\n    function initVideo(filename, funscripts) {\n      setEditingAxis(\"none\")\n      setCurrentFile(filename)\n      setFunscripts(funscripts)\n      let lsLatency = localStorage.getItem(`mosaSettingsVideoLatency_${filename}`)\n      if(lsLatency) setLatency(parseFloat(lsLatency))\n      worker.postMessage([\"updateParameters\", { funscripts: funscripts }])\n      let video = document.getElementById(\"idvideo\")\n      video.play();\n      video.ondurationchange = (e) => {\n        setVideoLength(e.srcElement.duration * 1000)\n      }\n      video.ontimeupdate = (e) => {\n        const veTimeMs = e.srcElement.currentTime * 1000\n        worker.postMessage([\"videoElementTimeMs\", veTimeMs])\n        setVideoPosition(veTimeMs)\n      }\n    }\n\n    if(file in local_video_files) {\n      let fileItem = local_video_files[file]\n      document.getElementById(\"idvideo\").src = URL.createObjectURL(await fileItem[\"entry\"].getFile());\n      let funscripts = {}\n      for(let axis of axes) {\n        if(axis[0] in fileItem) {\n          let fh = await fileItem[axis[0]].getFile()\n          let txt = await fh.text()\n          funscripts[axis[0]] = JSON.parse(txt)\n        }\n      }\n      initVideo(file, funscripts)\n      return\n    }\n\n    let funscripts = {};\n    let pathPrefix = window.location.pathname.startsWith(\"/mosa/\") ? \"/mosa/\" : \"/\"\n    document.getElementById(\"idvideo\").src = `${pathPrefix}video/${file}`;\n    let file_base = pathPrefix + \"video/\" + file.replaceAll(\".mp4\", \"\");\n    let fetches = [];\n    for(let axis of axes) {\n      fetches.push(\n        fetch(file_base + axis[1], { headers : { 'Content-Type': 'application/json', 'Accept': 'application/json' } } ).then(\n          (res) => res.json().then(\n            (json) => funscripts[axis[0]] = json\n          ).catch(\n            (err) => { console.log(err); funscripts[axis[0]] = undefined; }\n          )\n        ).catch(\n            (err) => { console.warn(err); funscripts[axis[0]] = undefined; }\n          )\n      )\n    }\n    Promise.allSettled(fetches).then(\n        () => { initVideo(file, funscripts) }\n    );\n  }\n\n  async function openLocalFolder() {\n    if(!window.hasOwnProperty(\"showDirectoryPicker\")) {\n      window.alert(\"Your browser does not support the File System API\")\n      return\n    }\n    const dirHandle = await window.showDirectoryPicker()\n    let videoFiles = {}\n    for await (const entry of dirHandle.values()) {\n      if(entry.kind === 'file') {\n        if(entry.name.endsWith(\".mp4\")) {\n          if(entry.name in videoFiles) {\n            videoFiles[entry.name][\"entry\"] = entry\n          } else {\n            videoFiles[entry.name] = {\"name\": entry.name, \"entry\": entry}\n          }\n          continue\n        }\n        if(entry.name.endsWith(\".funscript\")) {\n          for(let axis of axes) {\n            if(entry.name.endsWith(axis[1])) {\n              let name = entry.name.replaceAll(axis[1], \".mp4\")\n              if(name in videoFiles) {\n                videoFiles[name][axis[0]] = entry\n              } else {\n                videoFiles[name] = {\"name\": name, [axis[0]]: entry}\n              }\n              break\n            }\n          }\n        }\n      }\n    }\n    let videos = []\n    for(let e of Object.keys(videoFiles)) {\n      videos.push(e)\n    }\n    videos.sort()\n    setVideoFiles(videos)\n    setLocalVideoFiles(videoFiles)\n  }\n\n  const setEditAxis = axis => {\n    let tmp = {...funscripts}\n    if(tmp[axis] === undefined) {\n      tmp[axis] = {\"actions\": [{\"at\": 0, \"pos\": 50}]}\n      setFunscripts(tmp)\n      worker.postMessage([\"updateParameters\", { funscripts: funscripts }])\n      console.log(`created funscript file ${axis}`)\n    }\n    setEditingAxis(axis)\n  }\n\n  const selectVideoSpeed = speed => {\n    let player = document.getElementById(\"idvideo\")\n    player.playbackRate = parseFloat(speed) / 100\n    worker.postMessage([\"updateParameters\", { playback_rate: parseFloat(speed) / 100 }])\n    setVideoSpeed(speed)\n  }\n\n  const keydownListener = keydownEvent => {\n    const { key, target, repeat } = keydownEvent;\n    if (repeat) return;\n    if(key >= '1' && key <= '9') {\n      let pos = (key - '1') / 8 * 100\n      let tmp = {...funscripts}\n      let player = document.getElementById(\"idvideo\")\n      let current_msecs = player.currentTime * 1000.0 - latency\n      tmp[editing_axis][\"actions\"].push({\"at\": Math.floor(current_msecs), \"pos\": Math.floor(pos)})\n      tmp[editing_axis][\"actions\"].sort((a, b) => a[\"at\"] - b[\"at\"])\n      setFunscripts(tmp)\n      worker.postMessage([\"updateParameters\", { funscripts: funscripts }])\n      console.log(`Axis ${editing_axis} has ${tmp[editing_axis][\"actions\"].length} actions`)\n    }\n    if(key === '0') {\n      let tmp = {...funscripts}\n      let player = document.getElementById(\"idvideo\")\n      let current_msecs = player.currentTime * 1000 - latency\n      tmp[editing_axis][\"actions\"] = tmp[editing_axis][\"actions\"].filter( (e) => e[\"at\"] < current_msecs - 1500 || e[\"at\"] > current_msecs + 1500)\n      setFunscripts(tmp)\n      worker.postMessage([\"updateParameters\", { funscripts: funscripts }])\n      player.currentTime = (current_msecs - 3000 + latency) / 1000\n    }\n    const speed_key_dict = { 'q': 10, 'w': 25, 'e': 50, 'r': 100, 't': 200 }\n    if(key in speed_key_dict) {\n      selectVideoSpeed(speed_key_dict[key])\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keydownListener, true)\n    return () => window.removeEventListener(\"keydown\", keydownListener, true)\n  })\n\n  const setRunning = running => {\n    worker.postMessage([\"updateParameters\", { running: running }])\n  }\n\n  const downloadEditingScript = () => {\n    let element = document.createElement('a');\n    element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(funscripts[editing_axis])));\n    let extension = \".json\"\n    for(let axis of axes) {\n      if(axis[0] === editing_axis) extension = axis[1]\n    }\n    element.setAttribute('download', current_file.replaceAll(\".mp4\", extension));\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  useEffect(() => {\n    if(video_files.length > 0) return;\n    let pathPrefix = window.location.pathname.startsWith(\"/mosa/\") ? \"/mosa/\" : \"/\"\n    fetch(`${pathPrefix}video/videos.txt`, {})\n    .then(res => res.text())\n    .then(\n          (result) => { setVideoFiles(result.split(\"\\n\")) },\n          (error) => { alert(\"Could not load list of video files\"); }\n    )\n  }, [])\n\n  useEffect(() => {\n    const port = getMosaContextWorkerPort()\n    worker.postMessage([\"setContextPort\", port], [port])\n  }, [])\n\n  const updateLatency = value => {\n    worker.postMessage([\"updateParameters\", { latency: value }])\n    setLatency(value)\n    localStorage.setItem(`mosaSettingsVideoLatency_${current_file}`, `${value}`)\n  }\n\n  let stle = {position: 'absolute', marginLeft: '399px', width: '2px', height: '100px', backgroundColor: 'grey'}\n  const result = useMemo(() => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Video</Typography>\n        <hr />\n        <video id=\"idvideo\" width=\"100%\" onPlay={() => setRunning(true)} onPause={() => setRunning(false)} controls>\n        </video>\n        {editing_axis !== \"none\" ? <div style={stle}/> : \"\"}\n        {editing_axis !== \"none\" ? <Canvas vpos={video_position} funscripts={funscripts} axis={editing_axis} totalTime={video_length}></Canvas> : \"\"}\n      </CardContent>\n      <Typography>File</Typography>\n      <Button\n        onClick={() => openLocalFolder()}\n        variant=\"contained\"\n        color=\"default\"\n      >\n        Open Client Video Folder\n      </Button>\n      <Select\n        id=\"idselect\"\n        value={current_file}\n        onChange={(e, value) => setFile(value.props.value)}>\n        <MenuItem value=\"none\" key=\"none\">no video</MenuItem>\n        {video_files.map((f) => (\n          <MenuItem value={f} key={f} >{f}</MenuItem>\n        ))}\n      </Select>\n\n      <Select\n        value={video_speed}\n        onChange={(e, value) => selectVideoSpeed(value.props.value)}>\n        <MenuItem value=\"10\" key=\"10\">10%</MenuItem>\n        <MenuItem value=\"25\" key=\"25\">25%</MenuItem>\n        <MenuItem value=\"50\" key=\"50\">50%</MenuItem>\n        <MenuItem value=\"75\" key=\"75\">75%</MenuItem>\n        <MenuItem value=\"100\" key=\"100\">100%</MenuItem>\n        <MenuItem value=\"200\" key=\"200\">200%</MenuItem>\n      </Select>\n      <Select\n        value={editing_axis}\n        onChange={(e, value) => setEditAxis(value.props.value)}>\n        <MenuItem value=\"none\" key=\"none\">none</MenuItem>\n        <MenuItem value=\"L0\" key=\"main\">Main/L0</MenuItem>\n        <MenuItem value=\"R2\" key=\"pitch\">Pitch/R2</MenuItem>\n        <MenuItem value=\"R1\" key=\"roll\">Roll/R1</MenuItem>\n        <MenuItem value=\"R0\" key=\"twist\">Twist/R0</MenuItem>\n        <MenuItem value=\"L1\" key=\"forward\">Forward/L1</MenuItem>\n        <MenuItem value=\"L2\" key=\"left\">Left/L2</MenuItem>\n        <MenuItem value=\"V0\" key=\"vibe1\">Vibe1/V0</MenuItem>\n        <MenuItem value=\"A0\" key=\"valve\">Valve/A0</MenuItem>\n        <MenuItem value=\"A1\" key=\"suck\">Suck/A1</MenuItem>\n      </Select>\n      <Button\n        onClick={() => downloadEditingScript()}\n        variant=\"contained\"\n        color=\"default\"\n        disabled={editing_axis === \"none\"}\n      >\n        Download script\n      </Button>\n\n      <Typography>Latency</Typography>\n      <Slider\n        value={latency}\n        min={-2000}\n        max={2000}\n        step={10}\n        track={false}\n        valueLabelDisplay={'auto'}\n        onChange={(e, value) => { updateLatency(value) } }\n        marks={[{ value: -1000, label: 'Video 1s early' },{ value: 1000, label: 'Video 1s late' }]}\n      />\n      <FormControlLabel key=\"moving_pauses\" label=\"Moving pauses\"\n          control={\n              <Switch\n                  checked={moving_pauses}\n                  onChange={(e) => setMovingPauses(!moving_pauses)}\n                  name=\"Moving pauses\"\n                  value=\"moving_pauses\"\n                  color={'primary'}\n              />\n          }\n      />\n    </Card>\n    ), [connected, current_file, video_files, moving_pauses,\n        video_length, video_position, video_speed, latency, funscripts, editing_axis]\n  );\n  return result;\n}\n\nexport default MosaVideoPlayer\n"],"sourceRoot":""}