{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/FormControl/FormControl.js","webpack:///./node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","webpack:///./src/components/MosaComponents/MosaPlanarControl.js","webpack:///./src/utils/random.js","webpack:///./src/config/strokes.js","webpack:///./src/components/MosaComponents/MosaRandomControl.js","webpack:///./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack:///./node_modules/@material-ui/core/esm/Switch/Switch.js","webpack:///./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack:///./src/components/MosaComponents/MosaSineControl.js","webpack:///./src/hooks/useIntervalHook.js"],"names":["props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","fullWidth","visuallyFocused","focused","_props$hiddenLabel","hiddenLabel","_props$margin","margin","_props$required","required","size","_props$variant","variant","other","_React$useState","initialAdornedStart","forEach","child","isMuiElement","input","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","_focused","setFocused","undefined","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","FormControlContext","Provider","value","root","concat","capitalize","withStyles","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","width","name","muiFormControl","useFormControl","fcs","formControlState","states","contained","dangerouslySetInnerHTML","__html","theme","palette","text","secondary","typography","caption","textAlign","main","marginLeft","marginRight","useStyles","makeStyles","graphCard","graphGrid","height","backgroundColor","backgroundSize","backgroundImage","gridInput","formControl","MosaPlanarControl","connected","commandRobot","useState","running","setRunning","pitch","setPitch","yAxis","setYAxis","xAxis","setXAxis","zAxis","setZAxis","xAxisFlipped","setXAxisFlipped","getCommand","event","boundingBox","target","getBoundingClientRect","bbxHeight","bottom","top","bbxWidth","right","left","Y","clientY","X","clientX","Z","clampedNum","moveToTarget","XTarget","YTarget","ZTarget","SelectAxis","axis","setAxis","Select","onChange","e","MenuItem","Card","CardContent","Typography","onMouseMove","mouseMoveEvent","onClick","onWheel","wheelMoveEvent","newDepth","deltaY","CardActions","Button","chooseRandomStroke","choices","enabledChoicesArray","Object","entries","filter","stroke","enabled","enabledChoices","index","keys","Math","floor","random","length","strokes","ShortStrokes","getStroke","speed","step","steps","pL0","L0","pR0","R0","pR1","R1","pR2","R2","direction","possibleStrokeLength","max","R0dir","i","nL0","nR0","sin","PI","nR1","nR2","push","LongStrokes","LongJerky","acceleration","velocity","rotationalAcceleration","rotationalVelocity","twistDirection","fL0","positional","rotational","Orbit","R1dir","R2dir","cos","Hops","x","abs","DoubleSine","strokeTime","bigStrokeAmpl","smallStrokes","nods","bends","q","w","sqrt","cbrt","MosaRandomControl","availableStrokes","setAvailableStrokes","timer","setTimer","startTime","setStartTime","setStep","setSpeed","randomness","setRandomness","strokeType","setStrokeType","setStroke","strokeCounter","setStrokeCounter","useInterval","newStrokeType","newTimer","Date","getTime","curStepNr","destination","handleStrokeChange","checked","Slider","min","valueLabelDisplay","track","marks","label","FormGroup","row","map","k","FormControlLabel","key","control","Switch","toggleRunning","toFixed","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","id","inputProps","inputRef","readOnly","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","hasLabelFor","IconButton","role","newChecked","cursor","opacity","zIndex","_props$edge","edge","_props$size","thumb","edgeStart","edgeEnd","switchBase","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","action","hoverOpacity","common","black","white","colorSecondary","sizeSmall","boxShadow","shadows","borderRadius","_props$labelPlacement","labelPlacement","controlProps","alignItems","WebkitTapHighlightColor","labelPlacementStart","labelPlacementTop","labelPlacementBottom","SineSlider","changeSettings","defaultValue","MosaSineControl","L0Speed","settings","newPosition","newValue","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval"],"mappings":"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","file":"40a1180446ffe7976832179b561cb9ae8515aaa6-1441c5bb31c363ba6165.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import React, { useState } from 'react'\n\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  FormHelperText,\n  Button,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { clampedNum } from '../../utils/clamp'\n\nconst useStyles = makeStyles({\n  graphCard: {\n    textAlign: 'center',\n  },\n  graphGrid: {\n    width: 301,\n    height: 301,\n    margin: 'auto',\n    backgroundColor: '#eee',\n    backgroundSize: '20px 20px',\n    backgroundImage:\n      'linear-gradient(to right, grey 1px, transparent 1px), linear-gradient(to bottom, grey 1px, transparent 1px);',\n    border: 0,\n  },\n  gridInput: {\n    formControl: {\n      margin: 16,\n      minWidth: 120,\n    },\n  },\n})\n\nexport const MosaPlanarControl = props => {\n  const { connected, commandRobot } = props\n  const { graphCard, graphGrid, gridInput } = useStyles()\n\n  const [running, setRunning] = useState(false)\n  const [pitch, setPitch] = useState(500)\n  const [yAxis, setYAxis] = useState('L0')\n  const [xAxis, setXAxis] = useState('R1')\n  const [zAxis, setZAxis] = useState('R2')\n\n  const [xAxisFlipped, setXAxisFlipped] = useState(true)\n\n  const toggleRunning = () => {\n    if (connected) setRunning(!running)\n  }\n  /**\n   * Takes the onMouseMove event, extracts where the cursor is relative to that element in X and Y.\n   * Returns an object containing L0/R1\n   * @param {*} event the onMouseMove event\n   * @returns an object containing the X/Y/Z axes\n   */\n  const getCommand = event => {\n    // TODO: clean up the math here\n    const boundingBox = event.target.getBoundingClientRect()\n    const bbxHeight = boundingBox.bottom - boundingBox.top\n    const bbxWidth = boundingBox.right - boundingBox.left\n\n    const Y = (1 - (event.clientY - boundingBox.top) / bbxHeight) * 1000\n    const X = xAxisFlipped\n      ? (1 - (event.clientX - boundingBox.left) / bbxHeight) * 1000\n      : (1 - (boundingBox.right - event.clientX) / bbxWidth) * 1000\n    const Z = clampedNum(pitch, 0, 999) // to prevent scrolling out of bounds\n\n    return { Y: Y, X: X, Z: Z }\n  }\n\n  const handleMouseMove = mouseMoveEvent => {\n    const { X, Y, Z } = getCommand(mouseMoveEvent)\n    moveToTarget(X, Y, Z)\n  }\n\n  const handleWheelMove = wheelMoveEvent => {\n    const newDepth = clampedNum(pitch - wheelMoveEvent.deltaY / 2, 0, 999) // TODO: configure this magic number\n    setPitch(newDepth)\n    const { X, Y, Z } = getCommand(wheelMoveEvent)\n    moveToTarget(X, Y, Z)\n  }\n\n  /**\n   * Takes target/destination values from x/y/z axes and writes that command to stream\n   *\n   * @param {number} XTarget 0-999\n   * @param {number} YTarget 0-999\n   * @param {number} ZTarget 0-999\n   */\n  const moveToTarget = (XTarget, YTarget, ZTarget) => {\n    if (running) {\n      let target = {}\n      target[xAxis] = XTarget\n      target[yAxis] = YTarget\n      target[zAxis] = ZTarget\n      commandRobot(target, 0.05) // a small amount of smoothing // TODO: Paramaterize this?\n    }\n  }\n\n  const SelectAxis = ({ axis, setAxis }) => {\n    return (\n      <Select value={axis} onChange={e => setAxis(e.target.value)}>\n        <MenuItem value={'L0'}>L0</MenuItem>\n        <MenuItem value={'L1'}>L1</MenuItem>\n        <MenuItem value={'L2'}>L2</MenuItem>\n        <MenuItem value={'R0'}>R0</MenuItem>\n        <MenuItem value={'R1'}>R1</MenuItem>\n        <MenuItem value={'R2'}>R2</MenuItem>\n      </Select>\n    )\n  }\n\n  return (\n    <Card className={graphCard}>\n      <CardContent>\n        <Typography>\n          <FormControl className={gridInput}>\n            <SelectAxis axis={yAxis} setAxis={setYAxis} />\n            <FormHelperText>Vertical Move</FormHelperText>\n          </FormControl>{' '}\n          <FormControl className={gridInput}>\n            <SelectAxis axis={xAxis} setAxis={setXAxis} />\n            <FormHelperText>Horizontal Move</FormHelperText>\n          </FormControl>{' '}\n          <FormControl className={gridInput}>\n            <SelectAxis axis={zAxis} setAxis={setZAxis} />\n            <FormHelperText>Scroll Wheel</FormHelperText>\n          </FormControl>\n        </Typography>\n        <button\n          className={graphGrid}\n          onMouseMove={handleMouseMove}\n          onClick={toggleRunning} // causes jsx-a11y warnings // TODO: address accessibility\n          onWheel={handleWheelMove}\n        >\n          +\n        </button>\n        <br />\n        <br />\n        <Typography>\n          {!connected ? (\n            <i>connect to your MAxSR to start interacting</i>\n          ) : (\n            <>\n              <i>\n                hint: click on the grid to {running ? 'disable' : 'enable '}\n              </i>\n            </>\n          )}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={() => setXAxisFlipped(!xAxisFlipped)}\n          variant={'outlined'}\n        >\n          Flip X Axis ({xAxisFlipped ? '++' : '--'})\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default MosaPlanarControl\n","import { clampedFloat } from './clamp'\n\n// given an object, return a random value from that object -- TODO: refactor this\nexport const chooseRandomStroke = choices => {\n  const enabledChoicesArray = Object.entries(choices).filter(\n    stroke => stroke[1].enabled\n  )\n  const enabledChoices = {}\n  for (const index in enabledChoicesArray) {\n    enabledChoices[enabledChoicesArray[index][0]] =\n      enabledChoicesArray[index][1]\n  }\n  const keys = Object.keys(enabledChoices)\n  const randex = Math.floor(Math.random() * keys.length)\n  return enabledChoices[keys[randex]]\n}\n\n// insert min/max, get random in between - thanks, MDN\nexport const arbitraryRandom = (min, max) => {\n  return min + (max - min) * Math.random()\n}\n\n// produces a random value appropriate to the intensity level\nexport const intensityScaledRandom = (low, high, intensity) => {\n  const factor = clampedFloat(intensity, 0, 1)\n\n  const [lowMin, lowMax] = low\n  const [highMin, highMax] = high\n\n  return arbitraryRandom(\n    lowMin + (highMin - lowMin) * factor,\n    lowMax + (highMax - lowMax) * factor\n  )\n}\n","import { clampedNum } from '../utils/clamp'\n\n// each element of `strokes` should have a `name` and a `getStroke(position, step)` function, at a minimum.\n// the `getStroke` function should, given a current position and step time, return an array of commands\n// commands returned should be in the format [ {}, {}, {}, ... ]\n// individual commands should be in the format { L0: #, L1: #, L2: #, R0: #, R1: #, R2: # };\n// where L0-L2, R0-R2 are the target position in tcode axes.\n\n// todo: develop more stroke types and parameterize them // #helpwanted\n\nexport const strokes = {\n  ShortStrokes: {\n    name: 'Short Stroke',\n    enabled: true,\n    getStroke: (position, speed, step) => {\n      const strokeTime = 800 / speed // .8 seconds\n      const distanceFactor = 0.5\n\n      const steps = strokeTime / step\n\n      let stroke = [],\n        pL0 = position.L0, // previous L0\n        pR0 = position.R0, // previous R0\n        pR1 = position.R1, // previous R1\n        pR2 = position.R2 // previous R2\n\n      const direction = pL0 < 500 ? 1 : -1 // if in bottom half, we go up; if in top half, we go down\n      const possibleStrokeLength = Math.max(pL0, 1000 - pL0) * distanceFactor // current to bottom, or current to top\n\n      const R0dir = pR0 < 500 ? 1 : -1 // if left, we go right; if right, we go left\n\n      for (let i = 1; i <= steps; i++) {\n        // choose next points\n        const nL0 = clampedNum(\n            pL0 + (direction * possibleStrokeLength) / steps,\n            0,\n            1000\n          ),\n          nR0 = clampedNum(\n            pR0 + R0dir * 20 * Math.sin((i / steps) * 2 * Math.PI),\n            0,\n            1000\n          ), // todo: improve this\n          nR1 = clampedNum((pR1 + 500) / 2, 0, 1000), // eventually move to middle\n          nR2 = clampedNum((pR2 + 500) / 2, 0, 1000) // eventually move to middle\n\n        // append next to stroke points\n        stroke.push({\n          L0: nL0,\n          R0: nR0,\n          R1: nR1,\n          R2: nR2,\n        })\n\n        // for next iteration, new points become previous points\n        pL0 = nL0\n        pR0 = nR0\n        pR1 = nR1\n        pR2 = nR2\n      }\n\n      return stroke\n    },\n  },\n  LongStrokes: {\n    name: 'Long Stroke',\n    enabled: true,\n    getStroke: (position, speed, step) => {\n      const strokeTime = 800 / speed // .8 seconds\n      const distanceFactor = 0.9\n\n      const steps = strokeTime / step\n\n      let stroke = [],\n        pL0 = position.L0, // previous L0\n        pR0 = position.R0, // previous R0\n        pR1 = position.R1, // previous R1\n        pR2 = position.R2 // previous R2\n\n      const direction = pL0 < 500 ? 1 : -1 // if in bottom half, we go up; if in top half, we go down\n      const possibleStrokeLength = Math.max(pL0, 1000 - pL0) * distanceFactor // current to bottom, or current to top\n\n      const R0dir = pR0 < 500 ? 1 : -1 // if left, we go right; if right, we go left\n\n      for (let i = 1; i <= steps; i++) {\n        // choose next points\n        const nL0 = clampedNum(\n            pL0 + (direction * possibleStrokeLength) / steps,\n            0,\n            1000\n          ),\n          nR0 = clampedNum(\n            pR0 + R0dir * 30 * Math.sin((i / steps) * 2 * Math.PI),\n            0,\n            1000\n          ), // todo: improve this\n          nR1 = clampedNum((pR1 + 500) / 2, 0, 1000), // eventually move to middle\n          nR2 = clampedNum((pR2 + 500) / 2, 0, 1000) // eventually move to middle\n\n        // append next to stroke points\n        stroke.push({\n          L0: nL0,\n          R0: nR0,\n          R1: nR1,\n          R2: nR2,\n        })\n\n        // for next iteration, new points become previous points\n        pL0 = nL0\n        pR0 = nR0\n        pR1 = nR1\n        pR2 = nR2\n      }\n\n      return stroke\n    },\n  },\n  LongJerky: {\n    name: 'Long Jerk',\n    enabled: true,\n    getStroke: (position, speed, step) => {\n      const maxPercentTravel = 0.75\n      const jerk = 0.01 // todo: leverage some function of this to gently accel/decel\n\n      const oL0 = position.L0,\n        oR0 = position.R0,\n        oR1 = position.R1,\n        oR2 = position.R2\n\n      let stroke = [],\n        acceleration = 0,\n        velocity = 0,\n        rotationalAcceleration = 0,\n        rotationalVelocity = 0,\n        pL0 = oL0, // previous L0 starts as original L0\n        pR0 = oR0, // previous R0 starts as original R0\n        pR1 = oR1, // previous L1 starts as original L1\n        pR2 = oR2 // previous L2 starts as original L2\n\n      const direction = pL0 < 500 ? 1 : -1 // if in bottom half, we go up; if in top half, we go down\n      const possibleStrokeLength = Math.max(pL0, 1000 - pL0) * maxPercentTravel // current to bottom, or current to top\n\n      const twistDirection = pR0 < 500 ? 1 : -1 // if left, we go right; if right, we go left\n\n      const fL0 = pL0 + direction * possibleStrokeLength // final L0\n\n      // condition based on direction; loop until we pass destination\n      while (direction > 0 ? pL0 < fL0 : pL0 > fL0) {\n        acceleration += direction * jerk * step * speed\n        velocity += acceleration + (1 / 2) * direction * jerk * step\n\n        rotationalAcceleration += twistDirection * jerk * step * speed\n        rotationalVelocity +=\n          rotationalAcceleration + (1 / 2) * twistDirection * jerk * step\n\n        const positional =\n          velocity + (1 / 2) * acceleration + (1 / 6) * direction * jerk\n\n        const rotational =\n          rotationalVelocity +\n          (1 / 2) * rotationalAcceleration +\n          (1 / 6) * twistDirection * jerk\n\n        const nL0 = clampedNum((pL0 += positional), 0, 1000),\n          nR0 = clampedNum((pR0 += rotational), 0, 1000),\n          nR1 = clampedNum((pR1 + 500) / 2, 0, 1000), // eventually move to middle\n          nR2 = clampedNum((pR2 + 500) / 2, 0, 1000) // eventually move to middle\n\n        // append next to stroke points\n        stroke.push({\n          L0: nL0,\n          R0: nR0,\n          R1: nR1,\n          R2: nR2,\n        })\n\n        // for next iteration, new points become previous points\n        pL0 = nL0\n        pR0 = nR0\n        pR1 = nR1\n        pR2 = nR2\n      }\n      return stroke\n    },\n  },\n  Orbit: {\n    name: 'Orbit',\n    enabled: true,\n    getStroke: (position, speed, step) => {\n      const strokeTime = (1 + 3 * Math.random() * 1000) / speed // 1-4 seconds\n      const steps = strokeTime / step\n      const oL0 = position.L0,\n        oR0 = position.R0,\n        oR1 = position.R1,\n        oR2 = position.R2\n\n      let stroke = [],\n        pL0 = oL0, // previous L0 starts as original L0\n        pR0 = oR0, // previous R0 starts as original R0\n        pR1 = oR1, // previous R1 starts as original R1\n        pR2 = oR2 // previous R2 starts as original R2\n\n      // randomize the R0/R1/R2 directions once per \"orbit\"\n      const R0dir = Math.random() >= 0.5 ? 1 : -1,\n        R1dir = Math.random() >= 0.5 ? 1 : -1,\n        R2dir = Math.random() >= 0.5 ? 1 : -1\n\n      for (let i = 1; i <= steps; i++) {\n        // choose next points\n        const nL0 = clampedNum(\n            pL0 + speed * 5 * Math.cos((i / steps) * Math.PI) + (pL0 < 500 ? 20 / steps : -20 / steps),\n            0,\n            1000\n          ),\n          nR0 = clampedNum(\n            pR0 + speed * R0dir * 30 * Math.sin((i / steps) * 2 * Math.PI),\n            0,\n            1000\n          ), // todo: improve this\n          nR1 = pR1 + speed * R1dir * 20 * Math.cos((i / steps) * 2 * Math.PI),\n          nR2 = pR2 + speed * R2dir * 15 * Math.sin((i / steps) * 2 * Math.PI) // can we find a way to center this?\n\n        // append next to stroke points\n        stroke.push({\n          L0: nL0,\n          R0: nR0,\n          R1: nR1,\n          R2: nR2,\n        })\n\n        // for next iteration, new points become previous points\n        pL0 = nL0\n        pR0 = nR0\n        pR1 = nR1\n        pR2 = nR2\n      }\n      return stroke\n    },\n  },\n\n  Hops: {\n    name: 'Hops',\n    enabled: true,\n    getStroke: (position, speed, step) => {\n      const strokeTime = 1 + 3 * Math.random() * 1000 / speed // 1-4 seconds\n      const steps = strokeTime / step\n      const oL0 = position.L0,\n        oR0 = position.R0,\n        oR1 = position.R1,\n        oR2 = position.R2\n\n      let stroke = [],\n        pL0 = oL0, // previous L0 starts as original L0\n        pR0 = oR0, // previous R0 starts as original R0\n        pR1 = oR1, // previous R1 starts as original R1\n        pR2 = oR2 // previous R2 starts as original R2\n\n      // randomize the R0/R1/R2 directions once per \"hop\"\n      const R0dir = Math.random() >= 0.5 ? 1 : -1,\n        R1dir = Math.random() >= 0.5 ? 1 : -1,\n        R2dir = Math.random() >= 0.5 ? 1 : -1\n\n      for (let i = 1; i <= steps; i++) {\n        // choose next points\n        const x = (i / steps) * Math.PI\n        const nL0 = clampedNum(\n            pL0 + speed * 50 * ((Math.sin(x) * Math.cos(x)) / Math.abs(Math.sin(x))),\n            0,\n            1000\n          ),\n          nR0 = clampedNum(\n            pR0 + speed * R0dir * 15 * Math.sin((i / steps) * 2 * Math.PI),\n            0,\n            1000\n          ), // todo: improve this\n          nR1 = pR1 + speed * R1dir * 20 * Math.cos((i / steps) * 2 * Math.PI),\n          nR2 = pR2 + speed * R2dir * 15 * Math.sin((i / steps) * 2 * Math.PI) // can we find a way to center this?\n\n        // append next to stroke points\n        stroke.push({\n          L0: nL0,\n          R0: nR0,\n          R1: nR1,\n          R2: nR2,\n        })\n\n        // for next iteration, new points become previous points\n        pL0 = nL0\n        pR0 = nR0\n        pR1 = nR1\n        pR2 = nR2\n      }\n      return stroke\n    },\n  },\n  DoubleSine: {\n    name: 'Double Sine',\n    enabled: true,\n    getStroke: (position, speed, step) => {\n      const strokeTime = 6000 / speed // 6 seconds\n      const bigStrokeAmpl = (500 - Math.abs(500 - position.L0)) / 500 * 350\n      const smallStrokeAmpl = 150\n      const smallStrokes = 7 + Math.floor(Math.random() * 3) * 2\n      const nods = 2 + Math.floor(Math.random() * 3)\n      const bends = 2 + Math.floor(Math.random() * 3)\n\n      const steps = Math.floor(strokeTime / step)\n\n      let stroke = []\n\n      for (let i = 1; i <= steps; i++) {\n        let q = i / steps\n        let w = Math.sqrt(q)\n        let nL0 = (1 - w) * position.L0 + w * 500 +\n                  Math.cbrt(Math.sin(q * Math.PI * 2)) * bigStrokeAmpl +\n                  Math.sin(q * smallStrokes * Math.PI * 2) * smallStrokeAmpl\n        let nR1 = (1 - w) * position.R1 + w * 500 +\n                  Math.sin(q * Math.PI * 2 * nods) * 500\n        let nR2 = (1 - w) * position.R2 + w * 500 +\n                  Math.sin(q * Math.PI * 2 * bends) * 500\n        if(i === steps) { nL0 = 500; nR1 = 500; nR2 = 500 }\n        stroke.push({\n          L0: clampedNum(nL0, 0, 1000),\n          R1: clampedNum(nR1, 0, 1000),\n          R2: clampedNum(nR2, 0, 1000)\n        })\n      }\n\n      return stroke\n    },\n  },\n}\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControlLabel,\n  FormGroup,\n  Slider,\n  Switch,\n  Typography,\n} from '@material-ui/core'\n\nimport { useInterval } from '../../hooks/useIntervalHook'\nimport { chooseRandomStroke } from '../../utils/random'\n\nimport { strokes } from '../../config/strokes'\n\nexport const MosaRandomControl = props => {\n  const { connected, target, commandRobot } = props\n\n  const [running, setRunning] = useState(false)\n  const [availableStrokes, setAvailableStrokes] = useState(strokes) // start with all strokes enabled by default\n\n  const [timer, setTimer] = useState(0) // start with no seconds on the clock\n  const [startTime, setStartTime] = useState(0)\n  const [step, setStep] = useState(50)\n  const [speed, setSpeed] = useState(100)\n  const [randomness, setRandomness] = useState(30)\n  const [strokeType, setStrokeType] = useState(\n    chooseRandomStroke(availableStrokes)\n  ) // todo: refactor this\n  const [stroke, setStroke] = useState(strokeType.getStroke(target, step))\n  const [strokeCounter, setStrokeCounter] = useState(0)\n\n  useInterval(() => {\n    if (running && connected) {\n      if (timer <= 0) {\n        // do we change stroke?\n        const newStrokeType =\n          Math.random() * 100 < randomness\n            ? chooseRandomStroke(availableStrokes) // todo: refactor this\n            : strokeType\n\n        const stroke = newStrokeType.getStroke(target, speed/100, step)\n        const newTimer = step * stroke.length // derive next timing from length of stroke\n\n        setStrokeType(newStrokeType)\n        setStroke(stroke)\n        setTimer(newTimer) // add time to the timer\n        setStartTime(new Date().getTime())\n        setStrokeCounter(strokeCounter + 1)\n      } else {\n        // execute the next stroke step\n        // It's not guaranteed we run at [step] interval, so look at actual time.\n        let curStepNr = Math.floor((new Date().getTime() - startTime) / step)\n        curStepNr = curStepNr < stroke.length ? curStepNr : stroke.length - 1\n        const destination = stroke[curStepNr]\n        commandRobot(destination, step / 1000)\n        setTimer(step * (stroke.length - curStepNr - 1))\n      }\n    } // if not running & connected, no-op\n  }, [step]) // next execution time will be about `step` ms away\n\n  const toggleRunning = running => {\n    running ? setTimer(0) : setStrokeCounter(0)\n    setRunning(!running)\n  }\n\n  const handleStrokeChange = e => {\n    setAvailableStrokes({\n      ...availableStrokes,\n      [e.target.value]: {\n        ...availableStrokes[e.target.value],\n        enabled: e.target.checked,\n      },\n    })\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Random: {strokeType.name}</Typography>\n        <hr />\n        <Typography>Change Stroke: {randomness}%</Typography>\n        <Slider\n          value={randomness}\n          min={0}\n          max={100}\n          valueLabelDisplay={'auto'}\n          onChange={(e, value) => setRandomness(value)}\n        />\n        <Typography>Speed: {speed}%</Typography>\n        <Slider\n          value={speed}\n          min={20}\n          max={500}\n          step={1}\n          valueLabelDisplay={'auto'}\n          onChange={(e, value) => setSpeed(value)}\n        />\n        <Typography>Update Frequency</Typography>\n        <Slider\n          value={step}\n          min={10}\n          max={100}\n          step={1}\n          track={false}\n          valueLabelDisplay={'auto'}\n          onChange={(e, value) => setStep(value)}\n          marks={[{ value: 50, label: '50ms/step' }]}\n          disabled={running}\n        />\n        <FormGroup row>\n          {Object.entries(availableStrokes).map(([k, stroke]) => {\n            return (\n              <FormControlLabel\n                key={stroke.name}\n                label={stroke.name}\n                control={\n                  <Switch\n                    checked={stroke.enabled}\n                    onChange={handleStrokeChange}\n                    name={stroke.name}\n                    value={k}\n                    color={'primary'}\n                  />\n                }\n              />\n            )\n          })}\n        </FormGroup>\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={() => toggleRunning(running)}\n          variant=\"contained\"\n          color=\"default\"\n          disabled={!connected}\n        >\n          {running ? 'STOP' : 'START'}\n        </Button>\n        <Typography>\n          Next: {(timer >= 0 ? timer / 1000 : 0).toFixed(1)}s\n        </Typography>\n        <Typography>-- Stroke #{strokeCounter}</Typography>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default MosaRandomControl\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import React, { useState } from 'react'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Slider,\n  Typography,\n} from '@material-ui/core'\nimport { useInterval } from '../../hooks/useIntervalHook'\n\n// TODO: refactor, potentially into useEffect + useInterval\nlet timer = 1000 * Math.PI // for clean transitions we need this to be a multiple of Pi\n\nexport const MosaSineControl = props => {\n  const { connected, commandRobot } = props\n\n  const [running, setRunning] = useState(false)\n  const [settings, changeSettings] = useState({\n    L0Speed: 1, // TODO: add more settings\n  })\n\n  const step = 50\n\n  const startSines = () => {\n    setRunning(true)\n  }\n\n  const stopSines = () => {\n    setRunning(false)\n  }\n\n  const handleL0SliderChange = (event, newValue) => {\n    changeSettings({ ...settings, L0Speed: newValue })\n  }\n\n  // TODO: calculate sine targets in a more sophisticated way\n  useInterval(() => {\n    if (running && connected) {\n      if (timer <= 0) timer += 1000 * Math.PI // for clean transitions we need this to be a multiple of Pi\n      const newPosition = {\n        L0: Math.floor((1000 * (1 + Math.sin(settings.L0Speed * timer))) / 2), // constrained to fractions by control\n        R1: Math.floor((1000 * (1 + Math.sin(timer))) / 2),\n        R2: Math.floor((1000 * (1 + Math.cos(timer))) / 2),\n      }\n\n      commandRobot(newPosition, step / 1000)\n      timer -= step\n    }\n  }, step)\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Sines</Typography>\n        <Typography>Slider controls L0 Intensity</Typography>\n        <SineSlider changeSettings={handleL0SliderChange} disabled={running} />\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={startSines}\n          variant=\"contained\"\n          color=\"default\"\n          disabled={!connected || running}\n        >\n          START SINES\n        </Button>\n        <Button\n          onClick={stopSines}\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={!connected || !running}\n        >\n          STOP SINES\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nconst SineSlider = props => {\n  const { changeSettings, disabled } = props\n  return (\n    <CardContent>\n      <Slider\n        onChange={changeSettings}\n        step={0.25}\n        min={0.25}\n        max={4}\n        defaultValue={1}\n        valueLabelDisplay=\"auto\"\n        disabled={disabled}\n      ></Slider>\n    </CardContent>\n  )\n}\n\nexport default MosaSineControl\n","import { useEffect, useRef } from 'react'\n\n// thanks https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef()\n\n  // remember the latest callback\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback]) // depend on callback (rerun when callback changes)\n\n  // set up the interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id) // clean up afterwards\n    }\n  }, [delay]) // depend on delay (rerun when delay changes)\n}\n"],"sourceRoot":""}