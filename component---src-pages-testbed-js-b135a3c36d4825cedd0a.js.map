{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/FormControl/FormControl.js","webpack:///./node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","webpack:///./src/components/MosaComponents/MosaPlanarControl.js","webpack:///./src/pages/testbed.js"],"names":["props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","fullWidth","visuallyFocused","focused","_props$hiddenLabel","hiddenLabel","_props$margin","margin","_props$required","required","size","_props$variant","variant","other","_React$useState","initialAdornedStart","forEach","child","isMuiElement","input","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","_focused","setFocused","undefined","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","FormControlContext","Provider","value","root","concat","capitalize","withStyles","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","width","name","muiFormControl","useFormControl","fcs","formControlState","states","contained","dangerouslySetInnerHTML","__html","theme","palette","text","secondary","typography","caption","textAlign","main","marginLeft","marginRight","useStyles","makeStyles","graphCard","graphGrid","height","backgroundColor","backgroundSize","backgroundImage","gridInput","formControl","MosaPlanarControl","connected","commandRobot","useState","running","setRunning","pitch","setPitch","yAxis","setYAxis","xAxis","setXAxis","zAxis","setZAxis","xAxisFlipped","setXAxisFlipped","getCommand","event","boundingBox","target","getBoundingClientRect","bbxHeight","bottom","top","bbxWidth","right","left","Y","clientY","X","clientX","Z","clampedNum","moveToTarget","XTarget","YTarget","ZTarget","SelectAxis","axis","setAxis","Select","onChange","e","MenuItem","Card","CardContent","Typography","onMouseMove","mouseMoveEvent","onClick","onWheel","wheelMoveEvent","newDepth","deltaY","CardActions","Button","TestBedPage","Consumer","isSerialAvailable","inputMethod","handleInputMethodChange","outputMethod","handleOutputMethodChange","settings","updateSettings","title","container","spacing","justify","item","xs","md","lg","exclusive"],"mappings":"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","file":"component---src-pages-testbed-js-b135a3c36d4825cedd0a.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import React, { useState } from 'react'\n\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  FormHelperText,\n  Button,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { clampedNum } from '../../utils/clamp'\n\nconst useStyles = makeStyles({\n  graphCard: {\n    textAlign: 'center',\n  },\n  graphGrid: {\n    width: 301,\n    height: 301,\n    margin: 'auto',\n    backgroundColor: '#eee',\n    backgroundSize: '20px 20px',\n    backgroundImage:\n      'linear-gradient(to right, grey 1px, transparent 1px), linear-gradient(to bottom, grey 1px, transparent 1px);',\n    border: 0,\n  },\n  gridInput: {\n    formControl: {\n      margin: 16,\n      minWidth: 120,\n    },\n  },\n})\n\nexport const MosaPlanarControl = props => {\n  const { connected, commandRobot } = props\n  const { graphCard, graphGrid, gridInput } = useStyles()\n\n  const [running, setRunning] = useState(false)\n  const [pitch, setPitch] = useState(500)\n  const [yAxis, setYAxis] = useState('L0')\n  const [xAxis, setXAxis] = useState('R1')\n  const [zAxis, setZAxis] = useState('R2')\n\n  const [xAxisFlipped, setXAxisFlipped] = useState(true)\n\n  const toggleRunning = () => {\n    if (connected) setRunning(!running)\n  }\n  /**\n   * Takes the onMouseMove event, extracts where the cursor is relative to that element in X and Y.\n   * Returns an object containing L0/R1\n   * @param {*} event the onMouseMove event\n   * @returns an object containing the X/Y/Z axes\n   */\n  const getCommand = event => {\n    // TODO: clean up the math here\n    const boundingBox = event.target.getBoundingClientRect()\n    const bbxHeight = boundingBox.bottom - boundingBox.top\n    const bbxWidth = boundingBox.right - boundingBox.left\n\n    const Y = (1 - (event.clientY - boundingBox.top) / bbxHeight) * 1000\n    const X = xAxisFlipped\n      ? (1 - (event.clientX - boundingBox.left) / bbxHeight) * 1000\n      : (1 - (boundingBox.right - event.clientX) / bbxWidth) * 1000\n    const Z = clampedNum(pitch, 0, 999) // to prevent scrolling out of bounds\n\n    return { Y: Y, X: X, Z: Z }\n  }\n\n  const handleMouseMove = mouseMoveEvent => {\n    const { X, Y, Z } = getCommand(mouseMoveEvent)\n    moveToTarget(X, Y, Z)\n  }\n\n  const handleWheelMove = wheelMoveEvent => {\n    const newDepth = clampedNum(pitch - wheelMoveEvent.deltaY / 2, 0, 999) // TODO: configure this magic number\n    setPitch(newDepth)\n    const { X, Y, Z } = getCommand(wheelMoveEvent)\n    moveToTarget(X, Y, Z)\n  }\n\n  /**\n   * Takes target/destination values from x/y/z axes and writes that command to stream\n   *\n   * @param {number} XTarget 0-999\n   * @param {number} YTarget 0-999\n   * @param {number} ZTarget 0-999\n   */\n  const moveToTarget = (XTarget, YTarget, ZTarget) => {\n    if (running) {\n      let target = {}\n      target[xAxis] = XTarget\n      target[yAxis] = YTarget\n      target[zAxis] = ZTarget\n      commandRobot(target, 0.05) // a small amount of smoothing // TODO: Paramaterize this?\n    }\n  }\n\n  const SelectAxis = ({ axis, setAxis }) => {\n    return (\n      <Select value={axis} onChange={e => setAxis(e.target.value)}>\n        <MenuItem value={'L0'}>L0</MenuItem>\n        <MenuItem value={'L1'}>L1</MenuItem>\n        <MenuItem value={'L2'}>L2</MenuItem>\n        <MenuItem value={'R0'}>R0</MenuItem>\n        <MenuItem value={'R1'}>R1</MenuItem>\n        <MenuItem value={'R2'}>R2</MenuItem>\n      </Select>\n    )\n  }\n\n  return (\n    <Card className={graphCard}>\n      <CardContent>\n        <Typography>\n          <FormControl className={gridInput}>\n            <SelectAxis axis={yAxis} setAxis={setYAxis} />\n            <FormHelperText>Vertical Move</FormHelperText>\n          </FormControl>{' '}\n          <FormControl className={gridInput}>\n            <SelectAxis axis={xAxis} setAxis={setXAxis} />\n            <FormHelperText>Horizontal Move</FormHelperText>\n          </FormControl>{' '}\n          <FormControl className={gridInput}>\n            <SelectAxis axis={zAxis} setAxis={setZAxis} />\n            <FormHelperText>Scroll Wheel</FormHelperText>\n          </FormControl>\n        </Typography>\n        <button\n          className={graphGrid}\n          onMouseMove={handleMouseMove}\n          onClick={toggleRunning} // causes jsx-a11y warnings // TODO: address accessibility\n          onWheel={handleWheelMove}\n        >\n          +\n        </button>\n        <br />\n        <br />\n        <Typography>\n          {!connected ? (\n            <i>connect to your MAxSR to start interacting</i>\n          ) : (\n            <>\n              <i>\n                hint: click on the grid to {running ? 'disable' : 'enable '}\n              </i>\n            </>\n          )}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={() => setXAxisFlipped(!xAxisFlipped)}\n          variant={'outlined'}\n        >\n          Flip X Axis ({xAxisFlipped ? '++' : '--'})\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default MosaPlanarControl\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { Card, Typography, CardContent, Grid, Divider } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n\nimport { MosaContext } from '../context/MosaContext'\n\nimport MosaOutputRangeControl from '../components/MosaComponents/MosaOutputRangeControl'\nimport MosaMotionControl from '../components/MosaComponents/MosaMotionControl'\nimport MosaPlanarControl from '../components/MosaComponents/MosaPlanarControl'\nimport MosaVibeControl from '../components/MosaComponents/MosaVibeControl'\nimport MosaVisualizer from '../components/MosaComponents/MosaVisualizer'\n\nconst TestBedPage = () => {\n  return (\n    <MosaContext.Consumer>\n      {({\n        isSerialAvailable,\n        connected,\n        commandRobot,\n        target,\n        inputMethod,\n        handleInputMethodChange,\n        outputMethod,\n        handleOutputMethodChange,\n        settings,\n        updateSettings,\n      }) => (\n        <Layout>\n          <SEO title=\"Testbed\" />\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item xs={12} md={4} lg={3}>\n              <Card>\n                <CardContent>\n                  <Typography>\n                    Input: {!inputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={inputMethod}\n                    exclusive\n                    onChange={handleInputMethodChange}\n                  >\n                    <ToggleButton value=\"web\">WEB</ToggleButton>\n                    <ToggleButton value=\"remote\" disabled>\n                      REMOTE\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography>\n                    Output: {!outputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={outputMethod}\n                    exclusive\n                    onChange={handleOutputMethodChange}\n                  >\n                    {isSerialAvailable && (\n                      <ToggleButton value=\"serial\">SERIAL</ToggleButton>\n                    )}\n                    <ToggleButton value=\"visualizer\">SR-VIS</ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography variant=\"caption\">\n                    (more I/O coming soon)\n                  </Typography>\n                  {!isSerialAvailable && ( // if serial not available, explain\n                    <>\n                      <br />\n                      <Typography>\n                        Could not detect serial capabilities. Please use the\n                        latest version of Chrome, open{' '}\n                        <code>chrome://flags</code>, and set\n                        <code>\n                          #enable-experimental-web-platform-features\n                        </code>{' '}\n                        (note that these are experimental features, use at your\n                        own risk, etc etc)\n                      </Typography>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              <hr />\n              <MosaOutputRangeControl\n                settings={settings}\n                updateSettings={updateSettings}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={5}>\n              <MosaVisualizer target={target} />\n              <hr />\n              <MosaMotionControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={4}>\n              <MosaPlanarControl\n                connected={connected}\n                commandRobot={commandRobot}\n              />\n              <hr />\n              <MosaVibeControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n          </Grid>\n          &nbsp;\n          <Divider />\n        </Layout>\n      )}\n    </MosaContext.Consumer>\n  )\n}\n\nexport default TestBedPage\n"],"sourceRoot":""}