{"version":3,"sources":["webpack:///./src/pages/automatic.js"],"names":["AutomaticPage","Consumer","isSerialAvailable","connected","getMosaContextWorkerPort","commandRobot","target","inputMethod","handleInputMethodChange","outputMethod","handleOutputMethodChange","settings","updateSettings","title","container","spacing","justify","item","xs","md","lg","value","exclusive","onChange","disabled"],"mappings":"6FAAA,wOAqHeA,UAnGO,WACpB,OACE,kBAAC,IAAYC,SAAb,MACG,gBACCC,EADD,EACCA,kBACAC,EAFD,EAECA,UACAC,EAHD,EAGCA,yBACAC,EAJD,EAICA,aACAC,EALD,EAKCA,OACAC,EAND,EAMCA,YACAC,EAPD,EAOCA,wBACAC,EARD,EAQCA,aACAC,EATD,EASCA,yBACAC,EAVD,EAUCA,SACAC,EAXD,EAWCA,eAXD,OAaC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAClC,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,gBACWb,GAAe,iBAE1B,kBAAC,IAAD,CACEc,MAAOd,EACPe,WAAS,EACTC,SAAUf,GAEV,kBAAC,IAAD,CAAca,MAAM,OAApB,OACA,kBAAC,IAAD,CAAcA,MAAM,SAASG,UAAQ,GAArC,WAIF,6BACA,6BACA,kBAAC,IAAD,iBACYf,GAAgB,iBAE5B,kBAAC,IAAD,CACEY,MAAOZ,EACPa,WAAS,EACTC,SAAUb,GAETR,GACC,kBAAC,IAAD,CAAcmB,MAAM,UAApB,UAEF,kBAAC,IAAD,CAAcA,MAAM,cAApB,YAEAnB,GACA,oCACE,6BACA,kBAAC,IAAD,2FAEiC,IAC/B,gDAHF,YAIE,4EAEQ,IANV,iFAcR,6BAEA,kBAAC,IAAD,CACES,SAAUA,EACVC,eAAgBA,KAGpB,kBAAC,IAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,IAAD,CAAgBd,OAAQA,IACxB,6BACA,kBAAC,IAAD,CACEH,UAAWA,EACXG,OAAQA,EACRF,yBAA0BA,IAE5B,6BACA,kBAAC,IAAD,CACED,UAAWA,EACXG,OAAQA,EACRD,aAAcA,KAGlB,kBAAC,IAAD,CAAMY,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,KAzElC,IA4EE,kBAAC,IAAD","file":"component---src-pages-automatic-js-72e75f140e1faf436a51.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { Card, Typography, CardContent, Grid, Divider } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n\nimport { MosaContext } from '../context/MosaContext'\n\nimport MosaOutputRangeControl from '../components/MosaComponents/MosaOutputRangeControl'\nimport MosaMotionControl from '../components/MosaComponents/MosaMotionControl'\nimport MosaPlanarControl from '../components/MosaComponents/MosaPlanarControl'\nimport MosaVibeControl from '../components/MosaComponents/MosaVibeControl'\nimport MosaSineControl from '../components/MosaComponents/MosaSineControl'\nimport MosaVisualizer from '../components/MosaComponents/MosaVisualizer'\nimport MosaRandomControl from '../components/MosaComponents/MosaRandomControl'\n\nconst AutomaticPage = () => {\n  return (\n    <MosaContext.Consumer>\n      {({\n        isSerialAvailable,\n        connected,\n        getMosaContextWorkerPort,\n        commandRobot,\n        target,\n        inputMethod,\n        handleInputMethodChange,\n        outputMethod,\n        handleOutputMethodChange,\n        settings,\n        updateSettings,\n      }) => (\n        <Layout>\n          <SEO title=\"Automatic\" />\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item xs={12} md={4} lg={3}>\n              <Card>\n                <CardContent>\n                  <Typography>\n                    Input: {!inputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={inputMethod}\n                    exclusive\n                    onChange={handleInputMethodChange}\n                  >\n                    <ToggleButton value=\"web\">WEB</ToggleButton>\n                    <ToggleButton value=\"remote\" disabled>\n                      REMOTE\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                  <br />\n                  <br />\n                  <Typography>\n                    Output: {!outputMethod && 'none selected'}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={outputMethod}\n                    exclusive\n                    onChange={handleOutputMethodChange}\n                  >\n                    {isSerialAvailable && (\n                      <ToggleButton value=\"serial\">SERIAL</ToggleButton>\n                    )}\n                    <ToggleButton value=\"visualizer\">SR-VIS</ToggleButton>\n                  </ToggleButtonGroup>\n                  {!isSerialAvailable && ( // if serial not available, explain\n                    <>\n                      <br />\n                      <Typography>\n                        Could not detect serial capabilities. Please use the\n                        latest version of Chrome, open{' '}\n                        <code>chrome://flags</code>, and set\n                        <code>\n                          #enable-experimental-web-platform-features\n                        </code>{' '}\n                        (note that these are experimental features, use at your\n                        own risk, etc etc)\n                      </Typography>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              <hr />\n\n              <MosaOutputRangeControl\n                settings={settings}\n                updateSettings={updateSettings}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={5}>\n              <MosaVisualizer target={target} />\n              <hr />\n              <MosaRandomControl\n                connected={connected}\n                target={target}\n                getMosaContextWorkerPort={getMosaContextWorkerPort}\n              />\n              <hr />\n              <MosaSineControl\n                connected={connected}\n                target={target}\n                commandRobot={commandRobot}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} lg={4}></Grid>\n          </Grid>\n          &nbsp;\n          <Divider />\n        </Layout>\n      )}\n    </MosaContext.Consumer>\n  )\n}\n\nexport default AutomaticPage\n"],"sourceRoot":""}